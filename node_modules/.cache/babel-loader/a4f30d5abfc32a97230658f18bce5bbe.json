{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { api, store } from './index';\nimport { loadComments, loadGuitar, loadGuitars } from './guitar-data'; // import { saveToken, dropToken } from '../services/token';\n\nimport { APIRoute } from '../const';\nexport const fetchGuitarsAction = createAsyncThunk('data/fetchGuitars', async () => {\n  const {\n    data\n  } = await api.get(APIRoute.Guitars);\n  store.dispatch(loadGuitars(data));\n});\nexport const fetchGuitarAction = createAsyncThunk('data/fetchGuitar', async guitarId => {\n  const {\n    data\n  } = await api.get(`${APIRoute.Guitar}${guitarId}`);\n  store.dispatch(loadGuitar(data));\n});\nexport const fetchCommentsAction = createAsyncThunk('data/fetchComments', async guitarId => {\n  const {\n    data\n  } = await api.get(`${APIRoute.Guitar}${guitarId}${APIRoute.Comments}`);\n  store.dispatch(loadComments(data));\n});\nexport const sendCommentAction = createAsyncThunk('data/sendNewReview', async _ref => {\n  let {\n    guitarId,\n    comment,\n    rating\n  } = _ref;\n  await api.post(`${APIRoute.Comments}${filmId}`, {\n    comment,\n    rating\n  });\n  store.dispatch(sendReview(false));\n});","map":{"version":3,"sources":["/Users/mashkust/react-starter-pack-main/src/store/api-actions.ts"],"names":["createAsyncThunk","api","store","loadComments","loadGuitar","loadGuitars","APIRoute","fetchGuitarsAction","data","get","Guitars","dispatch","fetchGuitarAction","guitarId","Guitar","fetchCommentsAction","Comments","sendCommentAction","comment","rating","post","filmId","sendReview"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,SAA3B;AAEA,SAAUC,YAAV,EAAwBC,UAAxB,EAAoCC,WAApC,QAAsD,eAAtD,C,CACA;;AACA,SAASC,QAAT,QAAwB,UAAxB;AAGA,OAAO,MAAMC,kBAAkB,GAAGP,gBAAgB,CAChD,mBADgD,EAEhD,YAAY;AACV,QAAM;AAAEQ,IAAAA;AAAF,MAAW,MAAMP,GAAG,CAACQ,GAAJ,CAAkBH,QAAQ,CAACI,OAA3B,CAAvB;AACAR,EAAAA,KAAK,CAACS,QAAN,CAAgBN,WAAW,CAACG,IAAD,CAA3B;AACD,CAL+C,CAA3C;AAQP,OAAO,MAAMI,iBAAiB,GAAGZ,gBAAgB,CAC/C,kBAD+C,EAE/C,MAAOa,QAAP,IAA4B;AAC1B,QAAM;AAAEL,IAAAA;AAAF,MAAW,MAAMP,GAAG,CAACQ,GAAJ,CAAiB,GAAEH,QAAQ,CAACQ,MAAO,GAAED,QAAS,EAA9C,CAAvB;AACAX,EAAAA,KAAK,CAACS,QAAN,CAAgBP,UAAU,CAACI,IAAD,CAA1B;AACD,CAL8C,CAA1C;AAQP,OAAO,MAAMO,mBAAmB,GAAGf,gBAAgB,CACjD,oBADiD,EAEjD,MAAOa,QAAP,IAA4B;AAC1B,QAAM;AAAEL,IAAAA;AAAF,MAAW,MAAMP,GAAG,CAACQ,GAAJ,CAAoB,GAAEH,QAAQ,CAACQ,MAAO,GAAED,QAAS,GAAEP,QAAQ,CAACU,QAAS,EAArE,CAAvB;AACAd,EAAAA,KAAK,CAACS,QAAN,CAAgBR,YAAY,CAACK,IAAD,CAA5B;AACD,CALgD,CAA5C;AAQP,OAAO,MAAMS,iBAAiB,GAAGjB,gBAAgB,CAC/C,oBAD+C,EAE/C,cAAkD;AAAA,MAA3C;AAACa,IAAAA,QAAD;AAAWK,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,GAA2C;AAChD,QAAMlB,GAAG,CAACmB,IAAJ,CAAqB,GAAEd,QAAQ,CAACU,QAAS,GAAEK,MAAO,EAAlD,EAAqD;AAACH,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAArD,CAAN;AACAjB,EAAAA,KAAK,CAACS,QAAN,CAAeW,UAAU,CAAC,KAAD,CAAzB;AACD,CAL8C,CAA1C","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { api, store } from './index';\nimport { Guitar, NewReview} from '../types/types';\nimport {  loadComments, loadGuitar, loadGuitars} from './guitar-data';\n// import { saveToken, dropToken } from '../services/token';\nimport { APIRoute} from '../const';\n\n\nexport const fetchGuitarsAction = createAsyncThunk(\n  'data/fetchGuitars',\n  async () => {\n    const { data } = await api.get<Guitar[]>(APIRoute.Guitars);\n    store.dispatch( loadGuitars(data));\n  },\n);\n\nexport const fetchGuitarAction = createAsyncThunk(\n  'data/fetchGuitar',\n  async (guitarId: number) => {\n    const { data } = await api.get<Guitar>(`${APIRoute.Guitar}${guitarId}`);\n    store.dispatch( loadGuitar(data));\n  },\n);\n\nexport const fetchCommentsAction = createAsyncThunk(\n  'data/fetchComments',\n  async (guitarId: number) => {\n    const { data } = await api.get<Comment[]>(`${APIRoute.Guitar}${guitarId}${APIRoute.Comments}`);\n    store.dispatch( loadComments(data));\n  },\n);\n\nexport const sendCommentAction = createAsyncThunk(\n  'data/sendNewReview',\n  async ({guitarId, comment, rating}: NewReview) => {\n    await api.post<NewReview>(`${APIRoute.Comments}${filmId}`, {comment, rating});\n    store.dispatch(sendReview(false));\n  },\n);\n"]},"metadata":{},"sourceType":"module"}