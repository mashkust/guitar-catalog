{"ast":null,"code":"var _jsxFileName = \"/Users/mashkust/react-starter-pack-main/src/components/app/app.tsx\",\n    _s = $RefreshSig$();\n\nimport { Route, Routes } from 'react-router-dom';\nimport { AppRoute, LIST_OF_GUITAR } from '../../const';\nimport { useAppSelector } from '../../hooks/hooks';\nimport GuitarPage from '../guitar-page';\nimport MainCard from '../main-card';\nimport NotFoundPage from '../notfound-page';\nimport LoadingScreen from '../loading-screen';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const guitars = useAppSelector(_ref => {\n    let {\n      DATA\n    } = _ref;\n    return DATA.guitars;\n  });\n  const isDataLoaded = useAppSelector(_ref2 => {\n    let {\n      DATA\n    } = _ref2;\n    return DATA.isDataLoaded;\n  });\n  const {\n    maxPrice,\n    minPrice,\n    selectedTypes,\n    selectedStrings\n  } = useAppSelector(_ref3 => {\n    let {\n      DATA\n    } = _ref3;\n    return DATA;\n  });\n  const [filteredGuitars, setFilteredGuitars] = useState(guitars);\n  useEffect(() => {\n    console.log('selectedStrings', selectedStrings);\n    setFilteredGuitars(guitars.slice(0).filter(el => {\n      return (maxPrice === null || el.price <= Number(maxPrice)) && (minPrice === null || el.price >= Number(minPrice)) && selectedTypes.length === 0 ? true : selectedTypes.includes(el.type) && selectedStrings.length === 0 ? true : selectedStrings.includes(el.stringCount);\n    }));\n  }, [maxPrice, minPrice, selectedTypes, selectedStrings, guitars]);\n  console.log('filteredGuitars', filteredGuitars);\n\n  if (!isDataLoaded) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: AppRoute.Page1,\n      element: /*#__PURE__*/_jsxDEV(MainCard, {\n        guitars: filteredGuitars.slice(LIST_OF_GUITAR[0].rangeFrom, LIST_OF_GUITAR[0].rangeTo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: AppRoute.Page2,\n      element: /*#__PURE__*/_jsxDEV(MainCard, {\n        guitars: filteredGuitars.slice(LIST_OF_GUITAR[1].rangeFrom, LIST_OF_GUITAR[1].rangeTo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: AppRoute.Page3,\n      element: /*#__PURE__*/_jsxDEV(MainCard, {\n        guitars: filteredGuitars.slice(LIST_OF_GUITAR[2].rangeFrom, LIST_OF_GUITAR[2].rangeTo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: AppRoute.Details,\n      element: /*#__PURE__*/_jsxDEV(GuitarPage, {\n        tab: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: AppRoute.Description,\n      element: /*#__PURE__*/_jsxDEV(GuitarPage, {\n        tab: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/*\",\n      element: /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iJEdKly5gOuolenYyP1Oe29/FDU=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mashkust/react-starter-pack-main/src/components/app/app.tsx"],"names":["Route","Routes","AppRoute","LIST_OF_GUITAR","useAppSelector","GuitarPage","MainCard","NotFoundPage","LoadingScreen","useEffect","useState","App","guitars","DATA","isDataLoaded","maxPrice","minPrice","selectedTypes","selectedStrings","filteredGuitars","setFilteredGuitars","console","log","slice","filter","el","price","Number","length","includes","type","stringCount","Page1","rangeFrom","rangeTo","Page2","Page3","Details","Description"],"mappings":"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","sourcesContent":["import { Route, Routes } from 'react-router-dom';\nimport { AppRoute, LIST_OF_GUITAR } from '../../const';\nimport { useAppSelector } from '../../hooks/hooks';\nimport GuitarPage from '../guitar-page';\nimport MainCard from '../main-card';\nimport NotFoundPage from '../notfound-page';\nimport LoadingScreen from '../loading-screen';\nimport { useEffect, useState } from 'react';\n\nfunction App(): JSX.Element {\n  const guitars = useAppSelector(({ DATA }) => DATA.guitars);\n  const isDataLoaded = useAppSelector(({ DATA }) => DATA.isDataLoaded);\n  const { maxPrice, minPrice, selectedTypes, selectedStrings} = useAppSelector(({ DATA }) => DATA);\n\n  const [filteredGuitars, setFilteredGuitars] = useState(guitars);\n\n  useEffect(() => {\n    console.log('selectedStrings', selectedStrings);\n      setFilteredGuitars( guitars.slice(0).filter((el)=>  {\n        return (maxPrice === null || el.price <= Number(maxPrice))\n        && (minPrice === null || el.price >= Number(minPrice))\n        && selectedTypes.length === 0 ? true : selectedTypes.includes(el.type) \n        && selectedStrings.length === 0 ? true : selectedStrings.includes(el.stringCount);\n      }));\n  },[maxPrice, minPrice, selectedTypes, selectedStrings, guitars]);\n\n\n  console.log('filteredGuitars', filteredGuitars);\n  if (!isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <Routes>\n      <Route\n        path={AppRoute.Page1}\n        element={<MainCard guitars={filteredGuitars.slice(LIST_OF_GUITAR[0].rangeFrom, LIST_OF_GUITAR[0].rangeTo)} />}\n      />\n      <Route\n        path={AppRoute.Page2}\n        element={<MainCard guitars={filteredGuitars.slice(LIST_OF_GUITAR[1].rangeFrom, LIST_OF_GUITAR[1].rangeTo)} />}\n      />\n      <Route\n        path={AppRoute.Page3}\n        element={<MainCard guitars={filteredGuitars.slice(LIST_OF_GUITAR[2].rangeFrom, LIST_OF_GUITAR[2].rangeTo)} />}\n      />\n      <Route\n        path={AppRoute.Details}\n        element={<GuitarPage tab />}\n      />\n      <Route\n        path={AppRoute.Description}\n        element={<GuitarPage tab={false} />}\n      />\n      <Route\n        path=\"/*\"\n        element={<NotFoundPage />}\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}