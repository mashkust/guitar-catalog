{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { NameSpace } from '../const';\nconst initialState = {\n  guitars: [],\n  guitar: null,\n  comments: [],\n  isDataLoaded: false,\n  isDataSending: false\n};\nexport const guitarData = createSlice({\n  name: NameSpace.data,\n  initialState,\n  reducers: {\n    loadGuitars: (state, action) => {\n      state.guitars = action.payload;\n      state.isDataLoaded = true;\n    },\n    loadGuitar: (state, action) => {\n      state.guitar = action.payload;\n    },\n    loadComments: (state, action) => {\n      state.comments = action.payload.sort((a, b) => {\n        if (a.createAt > b.createAt) {\n          return -1;\n        } else if (a.createAt < b.createAt) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n    },\n    sendComment: (state, action) => {\n      state.isDataSending = action.payload;\n    }\n  }\n});\nexport const {\n  loadGuitars,\n  loadGuitar,\n  loadComments,\n  sendComment\n} = guitarData.actions;","map":{"version":3,"sources":["/Users/mashkust/react-starter-pack-main/src/store/guitar-data.ts"],"names":["createSlice","NameSpace","initialState","guitars","guitar","comments","isDataLoaded","isDataSending","guitarData","name","data","reducers","loadGuitars","state","action","payload","loadGuitar","loadComments","sort","a","b","createAt","sendComment","actions"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,SAAQC,SAAR,QAAwB,UAAxB;AAEA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,OAAO,EAAE,EADsB;AAE/BC,EAAAA,MAAM,EAAE,IAFuB;AAG/BC,EAAAA,QAAQ,EAAE,EAHqB;AAI/BC,EAAAA,YAAY,EAAE,KAJiB;AAK/BC,EAAAA,aAAa,EAAE;AALgB,CAAjC;AASA,OAAO,MAAMC,UAAU,GAAGR,WAAW,CAAC;AACpCS,EAAAA,IAAI,EAAER,SAAS,CAACS,IADoB;AAEpCR,EAAAA,YAFoC;AAGpCS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACV,OAAN,GAAgBW,MAAM,CAACC,OAAvB;AACAF,MAAAA,KAAK,CAACP,YAAN,GAAqB,IAArB;AACD,KAJO;AAKRU,IAAAA,UAAU,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACT,MAAN,GAAeU,MAAM,CAACC,OAAtB;AACD,KAPO;AAQRE,IAAAA,YAAY,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAA2C;AACvDD,MAAAA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAP,CAAeG,IAAf,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC7C,YAAID,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnB,EAA6B;AAAE,iBAAO,CAAC,CAAR;AAAY,SAA3C,MACK,IAAIF,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnB,EAA6B;AAAE,iBAAO,CAAP;AAAW,SAA1C,MACA;AAAE,iBAAO,CAAP;AAAW;AACnB,OAJgB,CAAjB;AAKD,KAdO;AAeRC,IAAAA,WAAW,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACN,aAAN,GAAsBO,MAAM,CAACC,OAA7B;AACD;AAjBO;AAH0B,CAAD,CAA9B;AAwBP,OAAO,MAAM;AACXH,EAAAA,WADW;AAEXI,EAAAA,UAFW;AAGXC,EAAAA,YAHW;AAIXK,EAAAA;AAJW,IAKTd,UAAU,CAACe,OALR","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport { GuitarData } from '../types/types';\nimport {NameSpace} from '../const';\nimport type {Comment} from './../types/types';\nconst initialState: GuitarData = {\n  guitars: [],\n  guitar: null,\n  comments: [],\n  isDataLoaded: false,\n  isDataSending: false,\n};\n\n\nexport const guitarData = createSlice({\n  name: NameSpace.data,\n  initialState,\n  reducers: {\n    loadGuitars: (state, action) => {\n      state.guitars = action.payload;\n      state.isDataLoaded = true;\n    },\n    loadGuitar: (state, action) => {\n      state.guitar = action.payload;\n    },\n    loadComments: (state, action: { payload: Comment[] }) => {\n      state.comments = action.payload.sort((a, b) => {\n        if (a.createAt > b.createAt) { return -1; }\n        else if (a.createAt < b.createAt) { return 1; }\n        else { return 0; }\n      });\n    },\n    sendComment: (state, action) => {\n      state.isDataSending = action.payload;\n    },\n  },\n});\n\nexport const {\n  loadGuitars,\n  loadGuitar,\n  loadComments,\n  sendComment,\n} = guitarData.actions;\n"]},"metadata":{},"sourceType":"module"}