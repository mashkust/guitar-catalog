{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { NameSpace } from '../const';\nconst initialState = {\n  guitars: [],\n  guitar: null,\n  comments: [],\n  isDataLoaded: false,\n  isDataSending: false,\n  isSuccessModalOpened: false\n};\nexport const guitarData = createSlice({\n  name: NameSpace.data,\n  initialState,\n  reducers: {\n    setIsSuccessModalOpened: (satate, action) => {\n      state.isSuccessModalOpened = action.payload;\n    },\n    loadGuitars: (state, action) => {\n      state.guitars = action.payload;\n      state.isDataLoaded = true;\n    },\n    loadGuitar: (state, action) => {\n      state.guitar = action.payload;\n    },\n    loadComments: (state, action) => {\n      state.comments = action.payload.sort((a, b) => {\n        if (a.createAt > b.createAt) {\n          return -1;\n        } else if (a.createAt < b.createAt) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n    },\n    sendComment: (state, action) => {\n      state.isDataSending = action.payload;\n    }\n  }\n});\nexport const {\n  loadGuitars,\n  loadGuitar,\n  loadComments,\n  sendComment\n} = guitarData.actions;","map":{"version":3,"sources":["/Users/mashkust/react-starter-pack-main/src/store/guitar-data.ts"],"names":["createSlice","NameSpace","initialState","guitars","guitar","comments","isDataLoaded","isDataSending","isSuccessModalOpened","guitarData","name","data","reducers","setIsSuccessModalOpened","satate","action","state","payload","loadGuitars","loadGuitar","loadComments","sort","a","b","createAt","sendComment","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,SAAT,QAA0B,UAA1B;AAEA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,OAAO,EAAE,EADsB;AAE/BC,EAAAA,MAAM,EAAE,IAFuB;AAG/BC,EAAAA,QAAQ,EAAE,EAHqB;AAI/BC,EAAAA,YAAY,EAAE,KAJiB;AAK/BC,EAAAA,aAAa,EAAE,KALgB;AAM/BC,EAAAA,oBAAoB,EAAE;AANS,CAAjC;AAUA,OAAO,MAAMC,UAAU,GAAGT,WAAW,CAAC;AACpCU,EAAAA,IAAI,EAAET,SAAS,CAACU,IADoB;AAEpCT,EAAAA,YAFoC;AAGpCU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,uBAAuB,EAAE,CAACC,MAAD,EAASC,MAAT,KAA0C;AACjEC,MAAAA,KAAK,CAACR,oBAAN,GAA6BO,MAAM,CAACE,OAApC;AACD,KAHO;AAIRC,IAAAA,WAAW,EAAE,CAACF,KAAD,EAAQD,MAAR,KAAmB;AAC9BC,MAAAA,KAAK,CAACb,OAAN,GAAgBY,MAAM,CAACE,OAAvB;AACAD,MAAAA,KAAK,CAACV,YAAN,GAAqB,IAArB;AACD,KAPO;AAQRa,IAAAA,UAAU,EAAE,CAACH,KAAD,EAAQD,MAAR,KAAmB;AAC7BC,MAAAA,KAAK,CAACZ,MAAN,GAAeW,MAAM,CAACE,OAAtB;AACD,KAVO;AAWRG,IAAAA,YAAY,EAAE,CAACJ,KAAD,EAAQD,MAAR,KAA2C;AACvDC,MAAAA,KAAK,CAACX,QAAN,GAAiBU,MAAM,CAACE,OAAP,CAAeI,IAAf,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC7C,YAAID,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnB,EAA6B;AAAE,iBAAO,CAAC,CAAR;AAAY,SAA3C,MACK,IAAIF,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnB,EAA6B;AAAE,iBAAO,CAAP;AAAW,SAA1C,MACA;AAAE,iBAAO,CAAP;AAAW;AACnB,OAJgB,CAAjB;AAKD,KAjBO;AAkBRC,IAAAA,WAAW,EAAE,CAACT,KAAD,EAAQD,MAAR,KAAmB;AAC9BC,MAAAA,KAAK,CAACT,aAAN,GAAsBQ,MAAM,CAACE,OAA7B;AACD;AApBO;AAH0B,CAAD,CAA9B;AA2BP,OAAO,MAAM;AACXC,EAAAA,WADW;AAEXC,EAAAA,UAFW;AAGXC,EAAAA,YAHW;AAIXK,EAAAA;AAJW,IAKThB,UAAU,CAACiB,OALR","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { GuitarData } from '../types/types';\nimport { NameSpace } from '../const';\nimport type { Comment } from './../types/types';\nconst initialState: GuitarData = {\n  guitars: [],\n  guitar: null,\n  comments: [],\n  isDataLoaded: false,\n  isDataSending: false,\n  isSuccessModalOpened: false,\n};\n\n\nexport const guitarData = createSlice({\n  name: NameSpace.data,\n  initialState,\n  reducers: {\n    setIsSuccessModalOpened: (satate, action: { payload: boolean }) => {\n      state.isSuccessModalOpened = action.payload;\n    },\n    loadGuitars: (state, action) => {\n      state.guitars = action.payload;\n      state.isDataLoaded = true;\n    },\n    loadGuitar: (state, action) => {\n      state.guitar = action.payload;\n    },\n    loadComments: (state, action: { payload: Comment[] }) => {\n      state.comments = action.payload.sort((a, b) => {\n        if (a.createAt > b.createAt) { return -1; }\n        else if (a.createAt < b.createAt) { return 1; }\n        else { return 0; }\n      });\n    },\n    sendComment: (state, action) => {\n      state.isDataSending = action.payload;\n    },\n  },\n});\n\nexport const {\n  loadGuitars,\n  loadGuitar,\n  loadComments,\n  sendComment,\n} = guitarData.actions;\n"]},"metadata":{},"sourceType":"module"}