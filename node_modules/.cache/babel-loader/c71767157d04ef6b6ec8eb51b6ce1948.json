{"ast":null,"code":"import _slicedToArray from\"/Users/mashkust/react-starter-pack-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Route,Routes}from'react-router-dom';import{AppRoute,LIST_OF_GUITAR}from'../../const';import{useAppDispatch,useAppSelector}from'../../hooks/hooks';import GuitarPage from'../guitar-page';import MainCard from'../main-card';import NotFoundPage from'../notfound-page';import LoadingScreen from'../loading-screen';import{useEffect,useState}from'react';import{setFilteredGuitarsLength}from'../../store/guitar-data';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var guitars=useAppSelector(function(_ref){var DATA=_ref.DATA;return DATA.guitars;});var isDataLoaded=useAppSelector(function(_ref2){var DATA=_ref2.DATA;return DATA.isDataLoaded;});var maxPrice=useAppSelector(function(_ref3){var DATA=_ref3.DATA;return DATA.maxPrice;});var minPrice=useAppSelector(function(_ref4){var DATA=_ref4.DATA;return DATA.minPrice;});var selectedTypes=useAppSelector(function(_ref5){var DATA=_ref5.DATA;return DATA.selectedTypes;});var selectedStrings=useAppSelector(function(_ref6){var DATA=_ref6.DATA;return DATA.selectedStrings;});var dispatch=useAppDispatch();var _useState=useState(guitars),_useState2=_slicedToArray(_useState,2),filteredGuitars=_useState2[0],setFilteredGuitars=_useState2[1];useEffect(function(){setFilteredGuitars(guitars.slice(0).filter(function(el){return(maxPrice===null||el.price<=Number(maxPrice))&&(minPrice===null||el.price>=Number(minPrice))&&(selectedStrings.length===0?true:selectedStrings.includes(el.stringCount))&&(selectedTypes.length===0?true:selectedTypes.includes(el.type));}));},[maxPrice,minPrice,selectedTypes,selectedStrings,guitars]);useEffect(function(){dispatch(setFilteredGuitarsLength(filteredGuitars.length));},[filteredGuitars.length]);if(!isDataLoaded){return/*#__PURE__*/_jsx(LoadingScreen,{});}return/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:AppRoute.Page1,element:/*#__PURE__*/_jsx(MainCard,{guitars:filteredGuitars.slice(LIST_OF_GUITAR[0].rangeFrom,LIST_OF_GUITAR[0].rangeTo)})}),/*#__PURE__*/_jsx(Route,{path:AppRoute.Page2,element:/*#__PURE__*/_jsx(MainCard,{guitars:filteredGuitars.slice(LIST_OF_GUITAR[1].rangeFrom,LIST_OF_GUITAR[1].rangeTo)})}),/*#__PURE__*/_jsx(Route,{path:AppRoute.Page3,element:/*#__PURE__*/_jsx(MainCard,{guitars:filteredGuitars.slice(LIST_OF_GUITAR[2].rangeFrom,LIST_OF_GUITAR[2].rangeTo)})}),/*#__PURE__*/_jsx(Route,{path:AppRoute.Details,element:/*#__PURE__*/_jsx(GuitarPage,{tab:true})}),/*#__PURE__*/_jsx(Route,{path:AppRoute.Description,element:/*#__PURE__*/_jsx(GuitarPage,{tab:false})}),/*#__PURE__*/_jsx(Route,{path:\"/*\",element:/*#__PURE__*/_jsx(NotFoundPage,{})})]});}export default App;","map":{"version":3,"sources":["/Users/mashkust/react-starter-pack-main/src/components/app/app.tsx"],"names":["Route","Routes","AppRoute","LIST_OF_GUITAR","useAppDispatch","useAppSelector","GuitarPage","MainCard","NotFoundPage","LoadingScreen","useEffect","useState","setFilteredGuitarsLength","App","guitars","DATA","isDataLoaded","maxPrice","minPrice","selectedTypes","selectedStrings","dispatch","filteredGuitars","setFilteredGuitars","slice","filter","el","price","Number","length","includes","stringCount","type","Page1","rangeFrom","rangeTo","Page2","Page3","Details","Description"],"mappings":"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","sourcesContent":["import { Route, Routes } from 'react-router-dom';\nimport { AppRoute, LIST_OF_GUITAR } from '../../const';\nimport { useAppDispatch, useAppSelector } from '../../hooks/hooks';\nimport GuitarPage from '../guitar-page';\nimport MainCard from '../main-card';\nimport NotFoundPage from '../notfound-page';\nimport LoadingScreen from '../loading-screen';\nimport { useEffect, useState } from 'react';\nimport { setFilteredGuitarsLength } from '../../store/guitar-data';\n\nfunction App(): JSX.Element {\n  const guitars = useAppSelector(({ DATA }) => DATA.guitars);\n  const isDataLoaded = useAppSelector(({ DATA }) => DATA.isDataLoaded);\n  const maxPrice = useAppSelector(({ DATA }) => DATA.maxPrice);\n  const minPrice = useAppSelector(({ DATA }) => DATA.minPrice);\n  const selectedTypes = useAppSelector(({ DATA }) => DATA.selectedTypes);\n  const selectedStrings = useAppSelector(({ DATA }) => DATA.selectedStrings);\n\n  const dispatch = useAppDispatch();\n  const [filteredGuitars, setFilteredGuitars] = useState(guitars);\n\n  useEffect(() => {\n    setFilteredGuitars(guitars.slice(0).filter((el) => (maxPrice === null || el.price <= Number(maxPrice))\n        && (minPrice === null || el.price >= Number(minPrice))\n        && (selectedStrings.length === 0 ? true : selectedStrings.includes(el.stringCount))\n        && (selectedTypes.length === 0 ? true : selectedTypes.includes(el.type))));\n  }, [maxPrice, minPrice, selectedTypes, selectedStrings, guitars]);\n\n  useEffect(() => {\n    dispatch(setFilteredGuitarsLength(filteredGuitars.length));\n  }, [filteredGuitars.length]);\n\n  if (!isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <Routes>\n      <Route\n        path={AppRoute.Page1}\n        element={<MainCard guitars={filteredGuitars.slice(LIST_OF_GUITAR[0].rangeFrom, LIST_OF_GUITAR[0].rangeTo)} />}\n      />\n      <Route\n        path={AppRoute.Page2}\n        element={<MainCard guitars={filteredGuitars.slice(LIST_OF_GUITAR[1].rangeFrom, LIST_OF_GUITAR[1].rangeTo)} />}\n      />\n      <Route\n        path={AppRoute.Page3}\n        element={<MainCard guitars={filteredGuitars.slice(LIST_OF_GUITAR[2].rangeFrom, LIST_OF_GUITAR[2].rangeTo)} />}\n      />\n      <Route\n        path={AppRoute.Details}\n        element={<GuitarPage tab />}\n      />\n      <Route\n        path={AppRoute.Description}\n        element={<GuitarPage tab={false} />}\n      />\n      <Route\n        path=\"/*\"\n        element={<NotFoundPage />}\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}