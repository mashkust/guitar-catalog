{"ast":null,"code":"var _jsxFileName = \"/Users/mashkust/react-starter-pack-main/src/components/add-comments.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RATING_VALUES } from '../const';\nimport { useAppDispatch, useAppSelector } from '../hooks/hooks';\nimport { sendCommentAction } from '../store/api-actions';\nimport { sendComment } from '../store/guitar-data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddComments(_ref) {\n  _s();\n\n  let {\n    guitar,\n    setIsCommentModalOpened,\n    setIsSuccessModalOpened\n  } = _ref;\n  const {\n    name,\n    id\n  } = guitar;\n  const dispatch = useAppDispatch();\n  const isReviewSending = useAppSelector(_ref2 => {\n    let {\n      DATA\n    } = _ref2;\n    return DATA.isDataSending;\n  });\n  const [text, setText] = useState('');\n  const [userName, setUserName] = useState('');\n  const [adv, setAdv] = useState('');\n  const [disadv, setDisadv] = useState('');\n  const [rating, setRating] = useState(0);\n  const [isRating, setIsRating] = useState(false);\n\n  const ratingChangeHandler = userRating => {\n    setRating(userRating);\n    setIsRating(true);\n  };\n\n  const startScroll = () => {\n    document.body.style.overflow = 'auto';\n  };\n\n  const onSuccessBtnClick = () => {\n    setIsSuccessModalOpened(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal is-active modal--review modal-for-ui-kit\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__overlay\",\n        onClick: () => {\n          setIsCommentModalOpened(false);\n          startScroll();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"modal__header modal__header--review title title--medium\",\n          children: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0437\\u044B\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal__product-name title title--medium-20 title--uppercase\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-review\",\n          onSubmit: evt => {\n            evt.preventDefault();\n            dispatch(sendComment(true));\n            dispatch(sendCommentAction({\n              comment: text,\n              guitarId: id,\n              rating: rating,\n              userName: userName,\n              advantage: adv,\n              disadvantage: disadv\n            }));\n            setIsCommentModalOpened(false);\n            onSuccessBtnClick();\n          },\n          action: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-review__wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-review__name-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-review__label form-review__label--required\",\n                htmlFor: \"user-name\",\n                children: \"\\u0412\\u0430\\u0448\\u0435 \\u0418\\u043C\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-review__input form-review__input--name\",\n                id: \"user-name\",\n                type: \"text\",\n                autoComplete: \"off\",\n                value: userName,\n                disabled: isReviewSending,\n                onChange: evt => {\n                  setUserName(evt.currentTarget.value);\n                },\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: userName.length > 0 ? 'form-review__war' : 'form-review__warning',\n                children: [\" \", userName.length > 0 ? '' : 'Заполните поле']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"form-review__label form-review__label--required\",\n                children: \"\\u0412\\u0430\\u0448\\u0430 \\u041E\\u0446\\u0435\\u043D\\u043A\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rate rate--reverse\",\n                children: [RATING_VALUES.map(el => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"visually-hidden\",\n                    id: `star-${el.value}`,\n                    type: \"radio\",\n                    name: \"rate\",\n                    value: el.value,\n                    checked: rating === el.value,\n                    onChange: evt => ratingChangeHandler(Number(evt.target.value)),\n                    disabled: isReviewSending\n                  }, el.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"rate__label\",\n                    htmlFor: `star-${el.value}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 23\n                  }, this)]\n                }, el.value, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)), rating > 0 ? '' : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"rate__message\",\n                  children: \"\\u041F\\u043E\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043E\\u0446\\u0435\\u043D\\u043A\\u0443\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-review__label form-review__label--required\",\n            htmlFor: \"adv\",\n            children: \"\\u0414\\u043E\\u0441\\u0442\\u043E\\u0438\\u043D\\u0441\\u0442\\u0432\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-review__input\",\n            id: \"adv\",\n            type: \"text\",\n            autoComplete: \"off\",\n            value: adv,\n            disabled: isReviewSending,\n            onChange: evt => {\n              setAdv(evt.currentTarget.value);\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: adv.length > 0 ? 'form-review__war' : 'form-review__warning',\n            children: [\" \", adv.length > 0 ? '' : 'Заполните поле']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-review__label form-review__label--required\",\n            htmlFor: \"disadv\",\n            children: \"\\u041D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0442\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-review__input\",\n            id: \"disadv\",\n            type: \"text\",\n            autoComplete: \"off\",\n            value: disadv,\n            disabled: isReviewSending,\n            onChange: evt => {\n              setDisadv(evt.currentTarget.value);\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), disadv.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"form-review__warning\",\n            children: \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-review__label form-review__label--required\",\n            htmlFor: \"comment\",\n            children: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: text,\n            disabled: isReviewSending,\n            onChange: evt => {\n              setText(evt.currentTarget.value);\n            },\n            className: \"form-review__input form-review__input--textarea\",\n            id: \"comment\",\n            autoComplete: \"off\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), text.length > 0 ? '' : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"form-review__warning\",\n            children: \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button--medium-20 form-review__button\",\n            type: \"submit\",\n            disabled: !isRating || isReviewSending,\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0437\\u044B\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal__close-btn button-cross\",\n          type: \"button\",\n          \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n          onClick: () => {\n            setIsCommentModalOpened(false);\n            startScroll();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"button-cross__icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"modal__close-btn-interactive-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddComments, \"9kd4M7d7THpLgR5uRsb9ompPHyE=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n\n_c = AddComments;\nexport default AddComments;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddComments\");","map":{"version":3,"sources":["/Users/mashkust/react-starter-pack-main/src/components/add-comments.tsx"],"names":["React","useState","RATING_VALUES","useAppDispatch","useAppSelector","sendCommentAction","sendComment","AddComments","guitar","setIsCommentModalOpened","setIsSuccessModalOpened","name","id","dispatch","isReviewSending","DATA","isDataSending","text","setText","userName","setUserName","adv","setAdv","disadv","setDisadv","rating","setRating","isRating","setIsRating","ratingChangeHandler","userRating","startScroll","document","body","style","overflow","onSuccessBtnClick","evt","preventDefault","comment","guitarId","advantage","disadvantage","currentTarget","value","length","map","el","Number","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { RATING_VALUES } from '../const';\nimport { useAppDispatch, useAppSelector } from '../hooks/hooks';\nimport { sendCommentAction } from '../store/api-actions';\nimport { sendComment } from '../store/guitar-data';\nimport type { Guitar } from '../types/types';\n\ntype AddCommentsProps = {\n  guitar: Guitar;\n  setIsCommentModalOpened: React.Dispatch<React.SetStateAction<boolean>>,\n  setIsSuccessModalOpened: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nfunction AddComments({ guitar, setIsCommentModalOpened,  setIsSuccessModalOpened }: AddCommentsProps): JSX.Element {\n  const { name, id } = guitar;\n  const dispatch = useAppDispatch();\n\n  const isReviewSending = useAppSelector(({DATA}) => DATA.isDataSending);\n  const [text, setText] = useState('');\n  const [userName, setUserName] = useState('');\n  const [adv, setAdv] = useState('');\n  const [disadv, setDisadv] = useState('');\n  const [rating, setRating] = useState<number>(0);\n  const [isRating, setIsRating] = useState<boolean>(false);\n\n  const ratingChangeHandler = (userRating: number) => {\n    setRating(userRating);\n    setIsRating(true);\n  };\n\n  const startScroll = () => {\n    document.body.style.overflow = 'auto';\n  };\n\n  const onSuccessBtnClick = () => {\n    setIsSuccessModalOpened(true);\n  };\n\n  return (\n    <div className=\"modal is-active modal--review modal-for-ui-kit\">\n      <div className=\"modal__wrapper\" >\n        <div className=\"modal__overlay\"\n          onClick={() => {\n            setIsCommentModalOpened(false);\n            startScroll();\n          }}\n        >\n        </div>\n        <div className=\"modal__content\">\n          <h2 className=\"modal__header modal__header--review title title--medium\">Оставить отзыв</h2>\n          <h3 className=\"modal__product-name title title--medium-20 title--uppercase\">{name}</h3>\n          <form className=\"form-review\" onSubmit={(evt: React.FormEvent<HTMLFormElement>) => {\n            evt.preventDefault();\n            dispatch(sendComment(true));\n            dispatch(sendCommentAction({\n              comment: text,\n              guitarId: id,\n              rating: rating,\n              userName: userName,\n              advantage: adv,\n              disadvantage: disadv,\n            }));\n            setIsCommentModalOpened(false);\n            onSuccessBtnClick();\n          }} action=\"#\"\n          >\n            <div className=\"form-review__wrapper\">\n              <div className=\"form-review__name-wrapper\">\n                <label className=\"form-review__label form-review__label--required\" htmlFor=\"user-name\">Ваше Имя</label>\n                <input className=\"form-review__input form-review__input--name\" id=\"user-name\" type=\"text\" autoComplete=\"off\" value={userName} disabled = {isReviewSending}\n                  onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                    setUserName(evt.currentTarget.value);\n                  }} required\n                />\n                <p className={userName.length>0 ? 'form-review__war' : 'form-review__warning' } > {userName.length>0 ? '' : 'Заполните поле'}</p>\n              </div>\n              <div><span className=\"form-review__label form-review__label--required\">Ваша Оценка</span>\n                <div className=\"rate rate--reverse\">\n                  {RATING_VALUES.map((el) => (\n                    <React.Fragment key={el.value}>\n                      <input className = \"visually-hidden\"  key = {el.value} id = {`star-${el.value}`} type = \"radio\"\n                        name = \"rate\" value = {el.value} checked = {rating === el.value}\n                        onChange = {(evt) => ratingChangeHandler(Number(evt.target.value))} disabled = {isReviewSending}\n                      />\n                      <label className = \"rate__label\" htmlFor = {`star-${el.value}`}>\n                      </label>\n                    </React.Fragment>\n                  ))}\n                  {rating >0 ? '': <p className=\"rate__message\">Поставьте оценку</p>}\n                </div>\n              </div>\n            </div>\n            <label className=\"form-review__label form-review__label--required\" htmlFor=\"adv\">Достоинства</label>\n            <input className=\"form-review__input\" id=\"adv\" type=\"text\" autoComplete=\"off\"  value={adv} disabled = {isReviewSending}\n              onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                setAdv(evt.currentTarget.value);\n              }} required\n            />\n            <p className={adv.length>0 ? 'form-review__war' : 'form-review__warning' } > {adv.length>0 ? '' : 'Заполните поле'}</p>\n            <label className=\"form-review__label form-review__label--required\" htmlFor=\"disadv\">Недостатки</label>\n            <input className=\"form-review__input\" id=\"disadv\" type=\"text\" autoComplete=\"off\" value={disadv} disabled = {isReviewSending}\n              onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                setDisadv(evt.currentTarget.value);\n              }} required\n            />\n            {disadv.length>0 ? <p ></p>: <p className=\"form-review__warning\">Заполните поле</p>}\n            <label className=\"form-review__label form-review__label--required\" htmlFor=\"comment\">Комментарий</label>\n            <textarea value={text} disabled = {isReviewSending}\n              onChange={(evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setText(evt.currentTarget.value);\n              }} className=\"form-review__input form-review__input--textarea\" id=\"comment\" autoComplete=\"off\" required\n            >\n            </textarea>\n            {text.length>0 ? '': <p className=\"form-review__warning\">Заполните поле</p>}\n            <button className=\"button button--medium-20 form-review__button\" type=\"submit\" disabled = {!isRating || isReviewSending}>Отправить отзыв</button>\n          </form>\n          <button className=\"modal__close-btn button-cross\" type=\"button\" aria-label=\"Закрыть\"\n            onClick={() => {\n              setIsCommentModalOpened(false);\n              startScroll();\n            }}\n          >\n            <span className=\"button-cross__icon\"></span><span className=\"modal__close-btn-interactive-area\"></span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AddComments;\n"]},"metadata":{},"sourceType":"module"}