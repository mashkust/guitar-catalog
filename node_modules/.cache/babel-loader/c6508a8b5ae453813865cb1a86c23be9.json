{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { NameSpace } from '../const';\nconst initialState = {\n  guitars: [],\n  guitar: null,\n  comments: [],\n  isDataLoaded: false,\n  isDataSending: false,\n  isSuccessModalOpened: false,\n  isCommentModalOpened: false,\n  isBookingModalOpened: false\n};\nexport const guitarData = createSlice({\n  name: NameSpace.data,\n  initialState,\n  reducers: {\n    setIsSuccessModalOpened: (state, action) => {\n      state.isSuccessModalOpened = action.payload;\n    },\n    setIsBookingModalOpened: (state, action) => {\n      state.isBookingModalOpened = action.payload;\n    },\n    setIsCommentModalOpened: (state, action) => {\n      state.isCommentModalOpened = action.payload;\n    },\n    loadGuitars: (state, action) => {\n      state.guitars = action.payload;\n      state.isDataLoaded = true;\n    },\n    loadGuitar: (state, action) => {\n      state.guitar = action.payload;\n    },\n    loadComments: (state, action) => {\n      state.comments = action.payload.sort((a, b) => new Date(b.createAt).getTime() - new Date(a.createAt).getTime());\n    },\n    sendComment: (state, action) => {\n      state.isDataSending = action.payload;\n    }\n  }\n});\nexport const {\n  loadGuitars,\n  loadGuitar,\n  loadComments,\n  sendComment,\n  setIsSuccessModalOpened,\n  setIsCommentModalOpened,\n  setIsBookingModalOpened\n} = guitarData.actions;","map":{"version":3,"sources":["/Users/mashkust/react-starter-pack-main/src/store/guitar-data.ts"],"names":["createSlice","NameSpace","initialState","guitars","guitar","comments","isDataLoaded","isDataSending","isSuccessModalOpened","isCommentModalOpened","isBookingModalOpened","guitarData","name","data","reducers","setIsSuccessModalOpened","state","action","payload","setIsBookingModalOpened","setIsCommentModalOpened","loadGuitars","loadGuitar","loadComments","sort","a","b","Date","createAt","getTime","sendComment","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,SAAT,QAA0B,UAA1B;AAEA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,OAAO,EAAE,EADsB;AAE/BC,EAAAA,MAAM,EAAE,IAFuB;AAG/BC,EAAAA,QAAQ,EAAE,EAHqB;AAI/BC,EAAAA,YAAY,EAAE,KAJiB;AAK/BC,EAAAA,aAAa,EAAE,KALgB;AAM/BC,EAAAA,oBAAoB,EAAE,KANS;AAO/BC,EAAAA,oBAAoB,EAAE,KAPS;AAQ/BC,EAAAA,oBAAoB,EAAE;AARS,CAAjC;AAYA,OAAO,MAAMC,UAAU,GAAGX,WAAW,CAAC;AACpCY,EAAAA,IAAI,EAAEX,SAAS,CAACY,IADoB;AAEpCX,EAAAA,YAFoC;AAGpCY,EAAAA,QAAQ,EAAE;AACRC,IAAAA,uBAAuB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAyC;AAChED,MAAAA,KAAK,CAACR,oBAAN,GAA6BS,MAAM,CAACC,OAApC;AACD,KAHO;AAIRC,IAAAA,uBAAuB,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAyC;AAChED,MAAAA,KAAK,CAACN,oBAAN,GAA4BO,MAAM,CAACC,OAAnC;AACD,KANO;AAORE,IAAAA,uBAAuB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAyC;AAChED,MAAAA,KAAK,CAACP,oBAAN,GAA6BQ,MAAM,CAACC,OAApC;AACD,KATO;AAURG,IAAAA,WAAW,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACb,OAAN,GAAgBc,MAAM,CAACC,OAAvB;AACAF,MAAAA,KAAK,CAACV,YAAN,GAAqB,IAArB;AACD,KAbO;AAcRgB,IAAAA,UAAU,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACZ,MAAN,GAAea,MAAM,CAACC,OAAtB;AACD,KAhBO;AAiBRK,IAAAA,YAAY,EAAE,CAACP,KAAD,EAAQC,MAAR,KAA2C;AACvDD,MAAAA,KAAK,CAACX,QAAN,GAAiBY,MAAM,CAACC,OAAP,CAAeM,IAAf,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASD,CAAC,CAACE,QAAX,EAAqBC,OAArB,KAAiC,IAAIF,IAAJ,CAASF,CAAC,CAACG,QAAX,EAAqBC,OAArB,EAA/D,CAAjB;AACD,KAnBO;AAoBRC,IAAAA,WAAW,EAAE,CAACd,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACT,aAAN,GAAsBU,MAAM,CAACC,OAA7B;AACD;AAtBO;AAH0B,CAAD,CAA9B;AA6BP,OAAO,MAAM;AACXG,EAAAA,WADW;AAEXC,EAAAA,UAFW;AAGXC,EAAAA,YAHW;AAIXO,EAAAA,WAJW;AAKXf,EAAAA,uBALW;AAMXK,EAAAA,uBANW;AAOXD,EAAAA;AAPW,IAQTR,UAAU,CAACoB,OARR","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { GuitarData } from '../types/types';\nimport { NameSpace } from '../const';\nimport type { Comment } from './../types/types';\nconst initialState: GuitarData = {\n  guitars: [],\n  guitar: null,\n  comments: [],\n  isDataLoaded: false,\n  isDataSending: false,\n  isSuccessModalOpened: false,\n  isCommentModalOpened: false,\n  isBookingModalOpened: false,\n};\n\n\nexport const guitarData = createSlice({\n  name: NameSpace.data,\n  initialState,\n  reducers: {\n    setIsSuccessModalOpened: (state, action: { payload: boolean }) => {\n      state.isSuccessModalOpened = action.payload;\n    },\n    setIsBookingModalOpened: (state, action: { payload: boolean }) => {\n      state.isBookingModalOpened= action.payload;\n    },\n    setIsCommentModalOpened: (state, action: { payload: boolean }) => {\n      state.isCommentModalOpened = action.payload;\n    },\n    loadGuitars: (state, action) => {\n      state.guitars = action.payload;\n      state.isDataLoaded = true;\n    },\n    loadGuitar: (state, action) => {\n      state.guitar = action.payload;\n    },\n    loadComments: (state, action: { payload: Comment[] }) => {\n      state.comments = action.payload.sort((a, b) => new Date(b.createAt).getTime() - new Date(a.createAt).getTime());\n    },\n    sendComment: (state, action) => {\n      state.isDataSending = action.payload;\n    },\n  },\n});\n\nexport const {\n  loadGuitars,\n  loadGuitar,\n  loadComments,\n  sendComment,\n  setIsSuccessModalOpened,\n  setIsCommentModalOpened,\n  setIsBookingModalOpened,\n} = guitarData.actions;\n"]},"metadata":{},"sourceType":"module"}