{"ast":null,"code":"var _jsxFileName = \"/Users/mashkust/react-starter-pack-main/src/components/app/app.tsx\",\n    _s = $RefreshSig$();\n\nimport { Route, Routes } from 'react-router-dom';\nimport { AppRoute, LIST_OF_GUITAR } from '../../const';\nimport { useAppDispatch, useAppSelector } from '../../hooks/hooks';\nimport GuitarPage from '../guitar-page';\nimport MainCard from '../main-card';\nimport NotFoundPage from '../notfound-page';\nimport LoadingScreen from '../loading-screen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const guitars = useAppSelector(_ref => {\n    let {\n      DATA\n    } = _ref;\n    return DATA.guitars;\n  });\n  const isDataLoaded = useAppSelector(_ref2 => {\n    let {\n      DATA\n    } = _ref2;\n    return DATA.isDataLoaded;\n  });\n  const maxPrice = useAppSelector(_ref3 => {\n    let {\n      DATA\n    } = _ref3;\n    return DATA.maxPrice;\n  });\n  const minPrice = useAppSelector(_ref4 => {\n    let {\n      DATA\n    } = _ref4;\n    return DATA.minPrice;\n  });\n  const selectedTypes = useAppSelector(_ref5 => {\n    let {\n      DATA\n    } = _ref5;\n    return DATA.selectedTypes;\n  });\n  const selectedStrings = useAppSelector(_ref6 => {\n    let {\n      DATA\n    } = _ref6;\n    return DATA.selectedStrings;\n  });\n  const dispatch = useAppDispatch(); // const [filteredGuitars, setFilteredGuitars] = useState(guitars);\n  // useEffect(() => {\n  //   setFilteredGuitars(guitars.slice(0).filter((el) => (maxPrice === null || el.price <= Number(maxPrice))\n  //       && (minPrice === null || el.price >= Number(minPrice))\n  //       && (selectedStrings.length === 0 ? true : selectedStrings.includes(el.stringCount))\n  //       && (selectedTypes.length === 0 ? true : selectedTypes.includes(el.type))));\n  // }, [maxPrice, minPrice, selectedTypes, selectedStrings, guitars]);\n  // dispatch(setFilteredGuitarsLength(filteredGuitars.length));\n\n  if (!isDataLoaded) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: AppRoute.Page1,\n      element: /*#__PURE__*/_jsxDEV(MainCard, {\n        guitars: filteredGuitars.slice(LIST_OF_GUITAR[0].rangeFrom, LIST_OF_GUITAR[0].rangeTo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: AppRoute.Page2,\n      element: /*#__PURE__*/_jsxDEV(MainCard, {\n        guitars: filteredGuitars.slice(LIST_OF_GUITAR[1].rangeFrom, LIST_OF_GUITAR[1].rangeTo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: AppRoute.Page3,\n      element: /*#__PURE__*/_jsxDEV(MainCard, {\n        guitars: filteredGuitars.slice(LIST_OF_GUITAR[2].rangeFrom, LIST_OF_GUITAR[2].rangeTo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: AppRoute.Details,\n      element: /*#__PURE__*/_jsxDEV(GuitarPage, {\n        tab: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: AppRoute.Description,\n      element: /*#__PURE__*/_jsxDEV(GuitarPage, {\n        tab: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/*\",\n      element: /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sMSBP2vHvrSOqifLTrRBsESVRx8=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mashkust/react-starter-pack-main/src/components/app/app.tsx"],"names":["Route","Routes","AppRoute","LIST_OF_GUITAR","useAppDispatch","useAppSelector","GuitarPage","MainCard","NotFoundPage","LoadingScreen","App","guitars","DATA","isDataLoaded","maxPrice","minPrice","selectedTypes","selectedStrings","dispatch","Page1","filteredGuitars","slice","rangeFrom","rangeTo","Page2","Page3","Details","Description"],"mappings":"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","sourcesContent":["import { Route, Routes } from 'react-router-dom';\nimport { AppRoute, LIST_OF_GUITAR } from '../../const';\nimport { useAppDispatch, useAppSelector } from '../../hooks/hooks';\nimport GuitarPage from '../guitar-page';\nimport MainCard from '../main-card';\nimport NotFoundPage from '../notfound-page';\nimport LoadingScreen from '../loading-screen';\nimport { useEffect, useState } from 'react';\nimport { setFilteredGuitarsLength } from '../../store/guitar-data';\n\nfunction App(): JSX.Element {\n  const guitars = useAppSelector(({ DATA }) => DATA.guitars);\n  const isDataLoaded = useAppSelector(({ DATA }) => DATA.isDataLoaded);\n  const maxPrice = useAppSelector(({ DATA }) => DATA.maxPrice);\n  const minPrice = useAppSelector(({ DATA }) => DATA.minPrice);\n  const selectedTypes = useAppSelector(({ DATA }) => DATA.selectedTypes);\n  const selectedStrings = useAppSelector(({ DATA }) => DATA.selectedStrings);\n\n  const dispatch = useAppDispatch();\n  // const [filteredGuitars, setFilteredGuitars] = useState(guitars);\n\n  // useEffect(() => {\n  //   setFilteredGuitars(guitars.slice(0).filter((el) => (maxPrice === null || el.price <= Number(maxPrice))\n  //       && (minPrice === null || el.price >= Number(minPrice))\n  //       && (selectedStrings.length === 0 ? true : selectedStrings.includes(el.stringCount))\n  //       && (selectedTypes.length === 0 ? true : selectedTypes.includes(el.type))));\n  // }, [maxPrice, minPrice, selectedTypes, selectedStrings, guitars]);\n\n  // dispatch(setFilteredGuitarsLength(filteredGuitars.length));\n\n  if (!isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <Routes>\n      <Route\n        path={AppRoute.Page1}\n        element={<MainCard guitars={filteredGuitars.slice(LIST_OF_GUITAR[0].rangeFrom, LIST_OF_GUITAR[0].rangeTo)} />}\n      />\n      <Route\n        path={AppRoute.Page2}\n        element={<MainCard guitars={filteredGuitars.slice(LIST_OF_GUITAR[1].rangeFrom, LIST_OF_GUITAR[1].rangeTo)} />}\n      />\n      <Route\n        path={AppRoute.Page3}\n        element={<MainCard guitars={filteredGuitars.slice(LIST_OF_GUITAR[2].rangeFrom, LIST_OF_GUITAR[2].rangeTo)} />}\n      />\n      <Route\n        path={AppRoute.Details}\n        element={<GuitarPage tab />}\n      />\n      <Route\n        path={AppRoute.Description}\n        element={<GuitarPage tab={false} />}\n      />\n      <Route\n        path=\"/*\"\n        element={<NotFoundPage />}\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}