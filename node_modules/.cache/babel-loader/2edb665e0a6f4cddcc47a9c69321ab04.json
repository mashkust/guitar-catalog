{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { api, store } from './index';\nimport { loadComments, loadGuitar, loadGuitars, sendReview } from './guitar-data'; // import { saveToken, dropToken } from '../services/token';\n\nimport { APIRoute } from '../const';\nexport const fetchGuitarsAction = createAsyncThunk('data/fetchGuitars', async () => {\n  const {\n    data\n  } = await api.get(APIRoute.Guitars);\n  store.dispatch(loadGuitars(data));\n});\nexport const fetchGuitarAction = createAsyncThunk('data/fetchGuitar', async guitarId => {\n  const {\n    data\n  } = await api.get(`${APIRoute.Guitar}${guitarId}`);\n  store.dispatch(loadGuitar(data));\n});\nexport const fetchCommentsAction = createAsyncThunk('data/fetchComments', async guitarId => {\n  const {\n    data\n  } = await api.get(`${APIRoute.Guitar}${guitarId}${APIRoute.Comments}`);\n  store.dispatch(loadComments(data));\n});\nexport const sendCommentAction = createAsyncThunk('data/sendComment', async _ref => {\n  let {\n    guitarId,\n    userName,\n    advantage,\n    disadvantage,\n    comment,\n    rating\n  } = _ref;\n  const data = JSON.stringify({\n    guitarId,\n    userName,\n    advantage,\n    disadvantage,\n    comment,\n    rating\n  });\n  await api.post(APIRoute.Comments, data);\n  store.dispatch(sendReview(false));\n});","map":{"version":3,"sources":["/Users/mashkust/react-starter-pack-main/src/store/api-actions.ts"],"names":["createAsyncThunk","api","store","loadComments","loadGuitar","loadGuitars","sendReview","APIRoute","fetchGuitarsAction","data","get","Guitars","dispatch","fetchGuitarAction","guitarId","Guitar","fetchCommentsAction","Comments","sendCommentAction","userName","advantage","disadvantage","comment","rating","JSON","stringify","post"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,SAA3B;AAEA,SAAUC,YAAV,EAAwBC,UAAxB,EAAoCC,WAApC,EAAiDC,UAAjD,QAAkE,eAAlE,C,CACA;;AACA,SAASC,QAAT,QAAwB,UAAxB;AAGA,OAAO,MAAMC,kBAAkB,GAAGR,gBAAgB,CAChD,mBADgD,EAEhD,YAAY;AACV,QAAM;AAAES,IAAAA;AAAF,MAAW,MAAMR,GAAG,CAACS,GAAJ,CAAkBH,QAAQ,CAACI,OAA3B,CAAvB;AACAT,EAAAA,KAAK,CAACU,QAAN,CAAgBP,WAAW,CAACI,IAAD,CAA3B;AACD,CAL+C,CAA3C;AAQP,OAAO,MAAMI,iBAAiB,GAAGb,gBAAgB,CAC/C,kBAD+C,EAE/C,MAAOc,QAAP,IAA4B;AAC1B,QAAM;AAAEL,IAAAA;AAAF,MAAW,MAAMR,GAAG,CAACS,GAAJ,CAAiB,GAAEH,QAAQ,CAACQ,MAAO,GAAED,QAAS,EAA9C,CAAvB;AACAZ,EAAAA,KAAK,CAACU,QAAN,CAAgBR,UAAU,CAACK,IAAD,CAA1B;AACD,CAL8C,CAA1C;AAQP,OAAO,MAAMO,mBAAmB,GAAGhB,gBAAgB,CACjD,oBADiD,EAEjD,MAAOc,QAAP,IAA4B;AAC1B,QAAM;AAAEL,IAAAA;AAAF,MAAW,MAAMR,GAAG,CAACS,GAAJ,CAAoB,GAAEH,QAAQ,CAACQ,MAAO,GAAED,QAAS,GAAEP,QAAQ,CAACU,QAAS,EAArE,CAAvB;AACAf,EAAAA,KAAK,CAACU,QAAN,CAAgBT,YAAY,CAACM,IAAD,CAA5B;AACD,CALgD,CAA5C;AAQP,OAAO,MAAMS,iBAAiB,GAAGlB,gBAAgB,CAC/C,kBAD+C,EAE/C,cAAqF;AAAA,MAA9E;AAAEc,IAAAA,QAAF;AAAYK,IAAAA,QAAZ;AAAsBC,IAAAA,SAAtB;AAAiCC,IAAAA,YAAjC;AAA+CC,IAAAA,OAA/C;AAAwDC,IAAAA;AAAxD,GAA8E;AACnF,QAAMd,IAAI,GAAIe,IAAI,CAACC,SAAL,CAAe;AAAEX,IAAAA,QAAF;AAAYK,IAAAA,QAAZ;AAAsBC,IAAAA,SAAtB;AAAiCC,IAAAA,YAAjC;AAA+CC,IAAAA,OAA/C;AAAwDC,IAAAA;AAAxD,GAAf,CAAd;AACA,QAAMtB,GAAG,CAACyB,IAAJ,CAAoBnB,QAAQ,CAACU,QAA7B,EAAuCR,IAAvC,CAAN;AACAP,EAAAA,KAAK,CAACU,QAAN,CAAeN,UAAU,CAAC,KAAD,CAAzB;AACD,CAN8C,CAA1C","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { api, store } from './index';\nimport { Guitar, NewReview, Comment} from '../types/types';\nimport {  loadComments, loadGuitar, loadGuitars, sendReview} from './guitar-data';\n// import { saveToken, dropToken } from '../services/token';\nimport { APIRoute} from '../const';\n\n\nexport const fetchGuitarsAction = createAsyncThunk(\n  'data/fetchGuitars',\n  async () => {\n    const { data } = await api.get<Guitar[]>(APIRoute.Guitars);\n    store.dispatch( loadGuitars(data));\n  },\n);\n\nexport const fetchGuitarAction = createAsyncThunk(\n  'data/fetchGuitar',\n  async (guitarId: number) => {\n    const { data } = await api.get<Guitar>(`${APIRoute.Guitar}${guitarId}`);\n    store.dispatch( loadGuitar(data));\n  },\n);\n\nexport const fetchCommentsAction = createAsyncThunk(\n  'data/fetchComments',\n  async (guitarId: number) => {\n    const { data } = await api.get<Comment[]>(`${APIRoute.Guitar}${guitarId}${APIRoute.Comments}`);\n    store.dispatch( loadComments(data));\n  },\n);\n\nexport const sendCommentAction = createAsyncThunk(\n  'data/sendComment',\n  async ({ guitarId, userName, advantage, disadvantage, comment, rating}:NewReview) => {\n    const data =  JSON.stringify({ guitarId, userName, advantage, disadvantage, comment, rating});\n    await api.post<NewReview>(APIRoute.Comments, data);\n    store.dispatch(sendReview(false));\n  },\n);\n"]},"metadata":{},"sourceType":"module"}