[{"/Users/mashkust/react-starter-pack-main/src/index.tsx":"1","/Users/mashkust/react-starter-pack-main/src/components/app/app.tsx":"2","/Users/mashkust/react-starter-pack-main/src/store/api-actions.ts":"3","/Users/mashkust/react-starter-pack-main/src/store/index.ts":"4","/Users/mashkust/react-starter-pack-main/src/const.ts":"5","/Users/mashkust/react-starter-pack-main/src/components/notfound-page.tsx":"6","/Users/mashkust/react-starter-pack-main/src/services/api.ts":"7","/Users/mashkust/react-starter-pack-main/src/services/token.ts":"8","/Users/mashkust/react-starter-pack-main/src/store/root-reducer.ts":"9","/Users/mashkust/react-starter-pack-main/src/store/guitar-data.ts":"10","/Users/mashkust/react-starter-pack-main/src/components/catalog-card.tsx":"11","/Users/mashkust/react-starter-pack-main/src/components/page-footer.tsx":"12","/Users/mashkust/react-starter-pack-main/src/components/page-header.tsx":"13","/Users/mashkust/react-starter-pack-main/src/components/guitar-card.tsx":"14","/Users/mashkust/react-starter-pack-main/src/hooks/hooks.ts":"15","/Users/mashkust/react-starter-pack-main/src/components/pagination.tsx":"16","/Users/mashkust/react-starter-pack-main/src/components/guitar-page.tsx":"17","/Users/mashkust/react-starter-pack-main/src/components/loading-screen.tsx":"18","/Users/mashkust/react-starter-pack-main/src/components/guitar-tabs/details.tsx":"19","/Users/mashkust/react-starter-pack-main/src/components/guitar-tabs/description.tsx":"20","/Users/mashkust/react-starter-pack-main/src/components/guitar-tab.tsx":"21","/Users/mashkust/react-starter-pack-main/src/components/basket-card.tsx":"22","/Users/mashkust/react-starter-pack-main/src/store/comment-process.ts":"23","/Users/mashkust/react-starter-pack-main/src/components/guitar-tabs/comments.tsx":"24","/Users/mashkust/react-starter-pack-main/src/components/show-more.tsx":"25","/Users/mashkust/react-starter-pack-main/src/components/add-comments.tsx":"26","/Users/mashkust/react-starter-pack-main/src/services/error-handle.ts":"27","/Users/mashkust/react-starter-pack-main/src/components/success-comments.tsx":"28","/Users/mashkust/react-starter-pack-main/src/utils.ts":"29","/Users/mashkust/react-starter-pack-main/src/mock.ts":"30","/Users/mashkust/react-starter-pack-main/src/store/middlewares.ts":"31","/Users/mashkust/react-starter-pack-main/src/components/history-router.tsx":"32","/Users/mashkust/react-starter-pack-main/src/hash-history.ts":"33","/Users/mashkust/react-starter-pack-main/src/components/filter-card.tsx":"34","/Users/mashkust/react-starter-pack-main/src/components/main-page.tsx":"35","/Users/mashkust/react-starter-pack-main/src/components/basket-page.tsx":"36","/Users/mashkust/react-starter-pack-main/src/components/basket-adding.tsx":"37","/Users/mashkust/react-starter-pack-main/src/components/success-basket.tsx":"38","/Users/mashkust/react-starter-pack-main/src/components/basket-removal.tsx":"39","/Users/mashkust/react-starter-pack-main/src/types/types.ts":"40"},{"size":716,"mtime":1656404806205,"results":"41","hashOfConfig":"42"},{"size":4350,"mtime":1656403329143,"results":"43","hashOfConfig":"42"},{"size":3003,"mtime":1656839842913,"results":"44","hashOfConfig":"42"},{"size":423,"mtime":1652775646786,"results":"45","hashOfConfig":"42"},{"size":1768,"mtime":1656661680824,"results":"46","hashOfConfig":"42"},{"size":328,"mtime":1652775646772,"results":"47","hashOfConfig":"42"},{"size":563,"mtime":1652775646780,"results":"48","hashOfConfig":"42"},{"size":392,"mtime":1652775646781,"results":"49","hashOfConfig":"42"},{"size":317,"mtime":1652775646788,"results":"50","hashOfConfig":"42"},{"size":8984,"mtime":1656841243027,"results":"51","hashOfConfig":"42"},{"size":2432,"mtime":1656413134733,"results":"52","hashOfConfig":"42"},{"size":4009,"mtime":1652775646773,"results":"53","hashOfConfig":"42"},{"size":4390,"mtime":1656529702618,"results":"54","hashOfConfig":"42"},{"size":3289,"mtime":1656499673251,"results":"55","hashOfConfig":"42"},{"size":304,"mtime":1652775646778,"results":"56","hashOfConfig":"42"},{"size":4449,"mtime":1654811828116,"results":"57","hashOfConfig":"42"},{"size":7121,"mtime":1656597444377,"results":"58","hashOfConfig":"42"},{"size":112,"mtime":1652775646771,"results":"59","hashOfConfig":"42"},{"size":908,"mtime":1652775646768,"results":"60","hashOfConfig":"42"},{"size":321,"mtime":1652775646767,"results":"61","hashOfConfig":"42"},{"size":1305,"mtime":1652775646765,"results":"62","hashOfConfig":"42"},{"size":3257,"mtime":1656835518502,"results":"63","hashOfConfig":"42"},{"size":643,"mtime":1652775646785,"results":"64","hashOfConfig":"42"},{"size":2041,"mtime":1652775646766,"results":"65","hashOfConfig":"42"},{"size":399,"mtime":1652775646776,"results":"66","hashOfConfig":"42"},{"size":7878,"mtime":1656617723653,"results":"67","hashOfConfig":"42"},{"size":660,"mtime":1656400656674,"results":"68","hashOfConfig":"42"},{"size":1928,"mtime":1656499844583,"results":"69","hashOfConfig":"42"},{"size":1240,"mtime":1656832321627,"results":"70","hashOfConfig":"42"},{"size":1424,"mtime":1652562531814,"results":"71","hashOfConfig":"42"},{"size":425,"mtime":1652782540927,"results":"72","hashOfConfig":"42"},{"size":730,"mtime":1652782698609,"results":"73","hashOfConfig":"42"},{"size":114,"mtime":1652782540926,"results":"74","hashOfConfig":"42"},{"size":9339,"mtime":1656869713255,"results":"75","hashOfConfig":"42"},{"size":2177,"mtime":1656597444369,"results":"76","hashOfConfig":"42"},{"size":7368,"mtime":1656839842921,"results":"77","hashOfConfig":"42"},{"size":2860,"mtime":1656500061116,"results":"78","hashOfConfig":"42"},{"size":2476,"mtime":1656499844584,"results":"79","hashOfConfig":"42"},{"size":3112,"mtime":1656684825363,"results":"80","hashOfConfig":"42"},{"size":2114,"mtime":1656665347752,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1gb3zua",{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mashkust/react-starter-pack-main/src/index.tsx",[],["174","175"],"/Users/mashkust/react-starter-pack-main/src/components/app/app.tsx",["176"],"import { Route, Routes } from 'react-router-dom';\nimport { AppRoute, LIST_OF_GUITAR } from '../../const';\nimport { useAppDispatch, useAppSelector } from '../../hooks/hooks';\nimport GuitarPage from '../guitar-page';\nimport MainPage from '../main-page';\nimport NotFoundPage from '../notfound-page';\nimport LoadingScreen from '../loading-screen';\nimport { useEffect, useState } from 'react';\nimport { setFilteredGuitarsLength, setFilteredPriceMax, setFilteredPriceMin } from '../../store/guitar-data';\nimport hashHistory from '../../hash-history';\nimport BasketPage from '../basket-page';\n\nfunction App(): JSX.Element {\n  const guitars = useAppSelector(({ DATA }) => DATA.guitars);\n  const isDataLoaded = useAppSelector(({ DATA }) => DATA.isDataLoaded);\n  const maxPrice = useAppSelector(({ DATA }) => DATA.maxPrice);\n  const minPrice = useAppSelector(({ DATA }) => DATA.minPrice);\n  const selectedTypes = useAppSelector(({ DATA }) => DATA.selectedTypes);\n  const selectedStrings = useAppSelector(({ DATA }) => DATA.selectedStrings);\n\n  const dispatch = useAppDispatch();\n  const [filteredGuitars, setFilteredGuitars] = useState(guitars);\n\n  useEffect(() => {\n    setFilteredGuitars(guitars.slice(0).filter((el) => (maxPrice === null || el.price <= Number(maxPrice))\n      && (minPrice === null || el.price >= Number(minPrice))\n      && (selectedStrings.length === 0 ? true : selectedStrings.includes(el.stringCount))\n      && (selectedTypes.length === 0 ? true : selectedTypes.includes(el.type))));\n\n    let filterSearch = '?filters=false';\n\n    if ( selectedStrings.length > 0 || selectedTypes.length > 0 ||  minPrice !== null  || maxPrice !== null ) {\n      filterSearch = '?filters=true';\n    }\n\n    if (selectedStrings.length > 0) {\n      const param1 = selectedStrings.map((el, i, arr) => el + (i === arr.length - 1 ? '' : '&')).join('');\n      filterSearch += `?strings=${param1}`;\n      window.localStorage.setItem('strings',String(param1));\n    }\n    if ( selectedTypes.length > 0 ) {\n      const param2 = selectedTypes.map((el, i, arr) => el + (i === arr.length - 1 ? '' : '&')).join('');\n      filterSearch += `?types=${param2}`;\n      window.localStorage.setItem('types',String(param2));\n    }\n\n    if ( minPrice !== null ) {\n      const param3 = minPrice;\n      filterSearch += `?minPrice=${param3}`;\n      window.localStorage.setItem('minPrice',String(param3));\n    }\n\n    if (maxPrice !== null) {\n      const param4 = maxPrice;\n      filterSearch += `?maxPrice=${param4}`;\n      window.localStorage.setItem('maxPrice',String(param4));\n    }\n\n    const startIndex = hashHistory.location.search.indexOf('?filters');\n    hashHistory.push({\n      search: (startIndex !== -1 ?  hashHistory.location.search.slice(0, startIndex) : hashHistory.location.search) + filterSearch,\n    });\n\n\n  }, [maxPrice, minPrice, selectedTypes, selectedStrings, guitars]);\n\n  useEffect(() => {\n    dispatch(setFilteredGuitarsLength(filteredGuitars.length));\n    dispatch(setFilteredPriceMax(filteredGuitars.slice().map((el)=>el.price).sort((a,b) => b - a)[0] && filteredGuitars.slice().map((el)=>el.price).sort((a,b) => b - a)[0]));\n    dispatch(setFilteredPriceMin(filteredGuitars.slice().map((el)=>el.price).sort((a,b) => b - a)[0] && filteredGuitars.slice().map((el)=>el.price).sort((a,b) => b - a)[filteredGuitars.length-1] ));\n  }, [filteredGuitars]);\n\n  if (!isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n  return (\n    <Routes>\n      <Route\n        path={AppRoute.Page1}\n        element={<MainPage guitars={filteredGuitars.slice(LIST_OF_GUITAR[0].rangeFrom, LIST_OF_GUITAR[0].rangeTo)} />}\n      />\n      <Route\n        path={AppRoute.Page2}\n        element={<MainPage guitars={filteredGuitars.slice(LIST_OF_GUITAR[1].rangeFrom, LIST_OF_GUITAR[1].rangeTo)} />}\n      />\n      <Route\n        path={AppRoute.Page3}\n        element={<MainPage guitars={filteredGuitars.slice(LIST_OF_GUITAR[2].rangeFrom, LIST_OF_GUITAR[2].rangeTo)} />}\n      />\n      <Route\n        path={AppRoute.Details}\n        element={<GuitarPage tab />}\n      />\n      <Route\n        path={AppRoute.Description}\n        element={<GuitarPage tab={false} />}\n      />\n      <Route\n        path=\"/*\"\n        element={<NotFoundPage />}\n      />\n      <Route\n        path={AppRoute.Basket}\n        element={<BasketPage />}\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n","/Users/mashkust/react-starter-pack-main/src/store/api-actions.ts",[],"/Users/mashkust/react-starter-pack-main/src/store/index.ts",[],"/Users/mashkust/react-starter-pack-main/src/const.ts",[],"/Users/mashkust/react-starter-pack-main/src/components/notfound-page.tsx",[],"/Users/mashkust/react-starter-pack-main/src/services/api.ts",[],"/Users/mashkust/react-starter-pack-main/src/services/token.ts",[],"/Users/mashkust/react-starter-pack-main/src/store/root-reducer.ts",[],"/Users/mashkust/react-starter-pack-main/src/store/guitar-data.ts",[],"/Users/mashkust/react-starter-pack-main/src/components/catalog-card.tsx",["177"],"import GuitarCard from './guitar-card';\nimport { Guitar } from '../types/types';\nimport Pagination from './pagination';\nimport FilterCard from './filter-card';\nimport { setIsDisconnect, setIsSortInc, setIsSorting } from '../store/guitar-data';\nimport { useAppDispatch, useAppSelector } from '../hooks/hooks';\nimport { useEffect } from 'react';\n\ntype CatalogCardProps = {\n  guitars: Guitar[];\n};\n\nfunction CatalogCard({ guitars }: CatalogCardProps): JSX.Element {\n  const {isSorting, isSortInc} = useAppSelector(({ DATA }) => DATA);\n  const dispatch = useAppDispatch();\n\n  const onSortPriceHandler = () =>{\n    dispatch(setIsSorting('price'));\n  };\n\n  const onSortRatingHandler = () =>{\n    dispatch(setIsSorting('rating'));\n  };\n\n  const onSortIncHandler = (bool : boolean) =>{\n    dispatch(setIsSortInc(bool));\n  };\n\n  useEffect(() =>  {dispatch(setIsDisconnect(navigator.onLine));\n  }, []);\n\n  return (\n    <div className=\"catalog\">\n      <FilterCard />\n      <div className=\"catalog-sort\">\n        <h2 className=\"catalog-sort__title\">Сортировать:</h2>\n        <div className=\"catalog-sort__type\">\n          <button className={`catalog-sort__type-button ${isSorting === 'price' ? 'catalog-sort__type-button--active' : ''}`}  aria-label=\"по цене\"\n            onClick={onSortPriceHandler}\n          > по цене\n          </button>\n          <button className={`catalog-sort__type-button ${isSorting === 'rating' ? 'catalog-sort__type-button--active' : ''}`} aria-label=\"по популярности\"\n            onClick={onSortRatingHandler}\n          >по популярности\n          </button>\n        </div>\n        <div className=\"catalog-sort__order\">\n          <button className={`catalog-sort__order-button catalog-sort__order-button--up ${isSortInc === true ? 'catalog-sort__order-button--active' : ''}`} aria-label=\"По возрастанию\" onClick={() => onSortIncHandler(true)}></button>\n          <button className={`catalog-sort__order-button catalog-sort__order-button--down ${isSortInc === false ? 'catalog-sort__order-button--active' : ''}`} aria-label=\"По убыванию\" onClick={() => onSortIncHandler(false)}></button>\n        </div>\n      </div>\n      <div className=\"cards catalog__cards\">\n        {guitars.map((guitar: Guitar) => (\n          <GuitarCard {...{ guitar }} key={guitar.id} />))}\n      </div>\n      <Pagination/>\n    </div>\n  );\n}\n\nexport default CatalogCard;\n","/Users/mashkust/react-starter-pack-main/src/components/page-footer.tsx",["178"],"import { Link } from 'react-router-dom';\nimport { AppRoute } from '../const';\n\nfunction PageFooter(): JSX.Element {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__container container\"><a className=\"footer__logo logo\"><img className=\"logo__img\" width=\"70\" height=\"70\" src=\"./img/svg/logo.svg\" alt=\"Логотип\" /></a>\n        <div className=\"socials footer__socials\">\n          <ul className=\"socials__list\">\n            <li className=\"socials-item\">\n              <a className=\"socials__link\" href=\"https://www.skype.com/\" aria-label=\"skype\">\n                <svg className=\"socials__icon\" width=\"24\" height=\"24\" aria-hidden=\"true\">\n                  <use href=\"#icon-skype\"></use>\n                </svg>\n              </a>\n            </li>\n            <li className=\"socials-item\">\n              <a className=\"socials__link\" href=\"https://www.vsco.com/\" aria-label=\"vsco\">\n                <svg className=\"socials__icon\" width=\"24\" height=\"24\" aria-hidden=\"true\">\n                  <use href=\"#icon-vsco\"></use>\n                </svg>\n              </a>\n            </li>\n            <li className=\"socials-item\">\n              <a className=\"socials__link\" href=\"https://www.pinterest.com/\" aria-label=\"pinterest\">\n                <svg className=\"socials__icon\" width=\"24\" height=\"24\" aria-hidden=\"true\">\n                  <use href=\"#icon-pinterest\"></use>\n                </svg>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <section className=\"footer__nav-section footer__nav-section--info\">\n          <h2 className=\"footer__nav-title\">О нас</h2>\n          <p className=\"footer__nav-content footer__nav-content--font-secondary\">Магазин гитар, музыкальных инструментов и гитарная мастерская <br /> в Санкт-Петербурге.<br /><br />Все инструменты проверены, отстроены <br /> и доведены до идеала!</p>\n        </section>\n        <section className=\"footer__nav-section footer__nav-section--links\">\n          <h2 className=\"footer__nav-title\">Информация</h2>\n          <ul className=\"footer__nav-list\">\n            <li className=\"footer__nav-list-item\"><Link className=\"link\" to={AppRoute.Where}>Где купить?</Link>\n            </li>\n            <li className=\"footer__nav-list-item\"><Link className=\"link\" to={AppRoute.Company}>Блог</Link>\n            </li>\n            <li className=\"footer__nav-list-item\"><Link className=\"link\" to={AppRoute.Company}>Вопрос - ответ</Link>\n            </li>\n            <li className=\"footer__nav-list-item\"><Link className=\"link\" to={AppRoute.Company}>Возврат</Link>\n            </li>\n            <li className=\"footer__nav-list-item\"><Link className=\"link\" to={AppRoute.Company}>Сервис-центры</Link>\n            </li>\n          </ul>\n        </section>\n        <section className=\"footer__nav-section footer__nav-section--contacts\">\n          <h2 className=\"footer__nav-title\">Контакты</h2>\n          <p className=\"footer__nav-content\">г. Санкт-Петербург,<br /> м. Невский проспект, <br />ул. Казанская 6.</p>\n          <div className=\"footer__nav-content\">\n            <svg className=\"footer__icon\" width=\"8\" height=\"8\" aria-hidden=\"true\">\n              <use href=\"#icon-phone\"></use>\n            </svg>\n            <a className=\"link\" href=\"tel:88125005050\"> 8-812-500-50-50</a>\n          </div>\n          <p className=\"footer__nav-content\">Режим работы:<br />\n            <span className=\"footer__span\">\n              <svg className=\"footer__icon\" width=\"13\" height=\"13\" aria-hidden=\"true\">\n                <use href=\"#icon-clock\"></use>\n              </svg>\n              <span> с 11:00 до 20:00</span>\n              <span>без выходных</span>\n            </span>\n          </p>\n        </section>\n      </div>\n    </footer>\n  );\n}\n\nexport default PageFooter;\n","/Users/mashkust/react-starter-pack-main/src/components/page-header.tsx",["179"],"import { useState } from 'react';\nimport { generatePath, Link, useNavigate } from 'react-router-dom';\nimport { AppRoute, indexSelect } from '../const';\nimport { useAppSelector } from '../hooks/hooks';\n\nfunction PageHeader(): JSX.Element {\n  const boughtGuitars = useAppSelector(({ DATA }) => DATA.boughtGuitars);\n  const navigate = useNavigate();\n  const [isSearch, setIsSearch] = useState<boolean>(false);\n  const [text, setText] = useState<string>('');\n\n  const { guitars } = useAppSelector(({ DATA }) => DATA);\n  const onFormClickHandler = (evt: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    evt.stopPropagation();\n    setIsSearch(true);\n  };\n\n  const onFormBlurHandler = (evt: React.FocusEvent<HTMLDivElement>) => {\n    const elementClass = String(evt.relatedTarget?.getAttribute('class'));\n    if (!(elementClass.includes('form-search__select-item') || elementClass.includes('form-search__select-list'))) {\n      setIsSearch(false);\n    } else {\n      evt.preventDefault();\n      evt.stopPropagation();\n    }\n  };\n\n  const onInputChangeHandler = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    setText(evt.currentTarget.value);\n  };\n\n  return (\n    <header className=\"header\" id=\"header\">\n      <div className=\"container header__wrapper\"><a className=\"header__logo logo\"><img className=\"logo__img\" width=\"70\" height=\"70\" src=\"./img/svg/logo.svg\" alt=\"Логотип\" /></a>\n        <nav className=\"main-nav\">\n          <ul className=\"main-nav__list\">\n            <li><Link className=\"link main-nav__link\" to={AppRoute.Page1} >Каталог</Link>\n            </li>\n            <li><Link className=\"link main-nav__link\" to={AppRoute.Where}>Где купить?</Link>\n            </li>\n            <li><Link className=\"link main-nav__link\" to={AppRoute.Company}>О компании</Link>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"form-search\" onClick={onFormClickHandler} onBlur={onFormBlurHandler} >\n          <form className=\"form-search__form\" id=\"form-search\">\n            <button className=\"form-search__submit\" type=\"submit\" disabled>\n              <svg className=\"form-search__icon\" width=\"14\" height=\"15\" aria-hidden=\"true\">\n                <use href=\"#icon-search\"></use>\n              </svg><span className=\"visually-hidden\">Начать поиск</span>\n            </button>\n            <input className=\"form-search__input\" id=\"search\" type=\"text\" autoComplete=\"off\" placeholder=\"что вы ищите?\" value={text} onChange={onInputChangeHandler} tabIndex={indexSelect - 1} />\n            <label className=\"visually-hidden\" htmlFor=\"search\">Поиск</label>\n          </form>\n          <ul className={`form-search__select-list ${isSearch ? '' : 'hidden'}`}>\n            {guitars\n              .filter((el) => el.name.toLowerCase().includes(text.toLowerCase()))\n              .map((el) => (\n                <li key={el.id} className=\"form-search__select-item\" tabIndex={indexSelect}\n                  onKeyPress={(evt) => {\n                    if (evt.key === 'Enter') {\n                      navigate(generatePath(AppRoute.Details, { id: String(el.id) }));\n                    }\n                  }}\n                  onClick={() => navigate(generatePath(AppRoute.Details, { id: String(el.id) }))}\n                > {el.name}\n                </li>))}\n          </ul>\n          <button className=\"form-search__reset\" type=\"reset\" form=\"form-search\" onClick={() => setText('')}>\n            <svg className=\"form-search__icon\" width=\"14\" height=\"15\" aria-hidden=\"true\">\n              <use href=\"#icon-close\"></use>\n            </svg><span className=\"visually-hidden\">Сбросить поиск</span>\n          </button>\n        </div>\n        <Link className=\"header__cart-link\" to={AppRoute.Basket} aria-label=\"Корзина\">\n          <svg className=\"header__cart-icon\" width=\"14\" height=\"14\" aria-hidden=\"true\">\n            <use href=\"#icon-basket\"></use>\n          </svg>\n          <span className=\"visually-hidden\">Перейти в корзину</span> {boughtGuitars.length > 0 ?\n            <span className=\"header__cart-count\">\n              {boughtGuitars.reduce((sum, elem) => {\n                if (elem.quantity) { return sum + elem.quantity; }\n                else { return sum; }\n              }, 0)}\n            </span> : ''}\n        </Link>\n      </div>\n    </header>\n  );\n}\n\nexport default PageHeader;\n","/Users/mashkust/react-starter-pack-main/src/components/guitar-card.tsx",[],"/Users/mashkust/react-starter-pack-main/src/hooks/hooks.ts",[],"/Users/mashkust/react-starter-pack-main/src/components/pagination.tsx",["180"],"import { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../const';\nimport { useAppDispatch, useAppSelector } from '../hooks/hooks';\nimport { setIsSortInc, setIsSorting, setMaxPrice, setMinPrice, setStringsGroup, setTypesGroup} from '../store/guitar-data';\nimport { GuitarTypes, SortType } from '../types/types';\n\nfunction Pagination(): JSX.Element {\n  const filteredGuitarsLength = useAppSelector(({ DATA }) => DATA.filteredGuitarsLength);\n  const {isSorting, isSortInc, maxPrice, minPrice, selectedStrings, selectedTypes } = useAppSelector(({ DATA }) => DATA);\n  const dispatch = useAppDispatch();\n  const sortType = localStorage.getItem('sortType');\n  const sortDirection = localStorage.getItem('sortDirection');\n\n  const priceMax = localStorage.getItem('maxPrice');\n  const priceMin = localStorage.getItem('minPrice');\n  const strings = localStorage.getItem('strings');\n  const types = localStorage.getItem('types');\n  useEffect(()=>{\n    if (sortType && sortDirection) {\n      if (!isSortInc && ! isSorting) {\n        dispatch(setIsSorting(sortType as SortType));\n        dispatch(setIsSortInc(sortDirection === 'true'));\n      }\n    }\n\n    if ( !maxPrice && priceMax) {\n      dispatch(setMaxPrice(priceMax));\n    }\n\n    if ( !minPrice && priceMin) {\n      dispatch(setMinPrice(priceMin));\n    }\n\n    if (selectedStrings.length === 0 && strings) {\n      dispatch(setStringsGroup(strings.split('&').map((el) => Number(el))));\n    }\n\n    if (selectedTypes.length === 0 && types ) {\n      dispatch(setTypesGroup(types.split('&').map((el) => (el as GuitarTypes))));\n    }\n\n\n  },[]);\n\n  return (\n    <div className=\"pagination page-content__pagination\" data-testid=\"pagination\">\n      <ul className=\"pagination__list\">\n        {document.location.hash.includes(AppRoute.Page2) ?\n          <><li className=\"pagination__page pagination__page--prev\" id=\"prev\"><Link className=\"link pagination__page-link\" to={AppRoute.Page1}>Назад</Link></li>\n            <li className=\"pagination__page \"><Link to={AppRoute.Page1} className=\"link pagination__page-link\">1</Link></li>\n            <li className=\"pagination__page\"><Link to={AppRoute.Page2} className=\"link pagination__page-link pagination__page--active\" type=\"button\">2</Link></li>\n            {filteredGuitarsLength && filteredGuitarsLength > 18 ?\n              <li className=\"pagination__page\"><Link to={AppRoute.Page3} className=\"link pagination__page-link\">3</Link></li>\n              : ''}\n            {filteredGuitarsLength && filteredGuitarsLength > 18 ?\n              <li className=\"pagination__page pagination__page--next\" id=\"next\"><Link to={AppRoute.Page3} className=\"link pagination__page-link\" >Далее</Link>\n              </li>\n              : ''}\n          </> : ''}\n        {document.location.hash.includes(AppRoute.Page1) ?\n          <>\n            <li className=\"pagination__page \"><Link to={AppRoute.Page1} className=\"link pagination__page-link pagination__page--active\">1</Link></li>\n            {filteredGuitarsLength && filteredGuitarsLength > 9 ?\n              <li className=\"pagination__page\"><Link to={AppRoute.Page2} className=\"link pagination__page-link \" type=\"button\">2</Link></li>\n              : ''}\n            {filteredGuitarsLength && filteredGuitarsLength > 18 ?\n              <li className=\"pagination__page\"><Link to={AppRoute.Page3} className=\"link pagination__page-link\">3</Link></li>\n              : ''}\n            {filteredGuitarsLength && filteredGuitarsLength > 9 ?\n              <li className=\"pagination__page pagination__page--next\" id=\"next\"><Link to={AppRoute.Page2} className=\"link pagination__page-link\" >Далее</Link>\n              </li>\n              : ''}\n          </> : ''}\n        {document.location.hash.includes(AppRoute.Page3) ?\n          <><li className=\"pagination__page pagination__page--prev\" id=\"prev\"><Link className=\"link pagination__page-link\" to={AppRoute.Page2}>Назад</Link></li>\n            <li className=\"pagination__page \"><Link to={AppRoute.Page1} className=\"link pagination__page-link\">1</Link></li>\n            <li className=\"pagination__page\"><Link to={AppRoute.Page2} className=\"link pagination__page-link \" type=\"button\">2</Link></li>\n            <li className=\"pagination__page\"><Link to={AppRoute.Page3} className=\"link pagination__page-link pagination__page--active\">3</Link></li>\n          </> : ''}\n      </ul>\n    </div>\n  );\n}\n\nexport default Pagination;\n","/Users/mashkust/react-starter-pack-main/src/components/guitar-page.tsx",["181"],"import React, { useEffect, useRef} from 'react';\nimport type { MouseEvent } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { AppRoute, STARS_MAX } from '../const';\nimport { useAppDispatch, useAppSelector } from '../hooks/hooks';\nimport { fetchCommentsAction, fetchGuitarAction } from '../store/api-actions';\nimport { Guitar, Comment } from '../types/types';\nimport LoadingScreen from './loading-screen';\nimport PageFooter from './page-footer';\nimport PageHeader from './page-header';\nimport GuitarTab from './guitar-tab';\nimport BasketAdiing from './basket-adding';\nimport Comments from './guitar-tabs/comments';\nimport ShowMore from './show-more';\nimport AddComments from './add-comments';\nimport SuccessComments from './success-comments';\nimport { pasrePrice, startScroll, stopScroll } from '../utils';\nimport { setIsBasket, setIsCommentModalOpened, setIsSuccessBasket, setIsSuccessModalOpened } from '../store/guitar-data';\nimport SuccessBasket from './success-basket';\n\ntype GuitarPageProps = {\n  tab: boolean,\n}\n\nfunction GuitarPage({ tab }: GuitarPageProps): JSX.Element {\n  const { guitar, comments, isSuccessModalOpened, isCommentModalOpened } = useAppSelector(({ DATA }) => DATA);\n  const { commentCardsCount } = useAppSelector(({ COMMENT }) => COMMENT);\n  const isBasketModalOpened = useAppSelector(({ DATA }) => DATA.isBasketModalOpened);\n  const isSuccessBasketModal = useAppSelector(({ DATA }) => DATA.isSuccessBasketModal);\n\n  useEffect(() => {\n    window.scrollTo({ top: 0 });\n  }, []);\n\n  const onBookingBtnClick = () => {\n    dispatch(setIsBasket(true));\n  };\n\n  const onCommentBtnClick = () => {\n    dispatch(setIsCommentModalOpened(true));\n  };\n\n  const onUpBtnClick = (evt: MouseEvent<HTMLButtonElement>) => {\n    evt.preventDefault();\n    if (mainRef && mainRef.current) {\n      mainRef.current.scrollIntoView({ block: 'start' });\n    }\n  };\n\n  const dispatch = useAppDispatch();\n  const params = useParams();\n\n  useEffect(() => {\n    const guitarid = Number(params.id);\n\n    if (guitarid) {\n      dispatch(fetchGuitarAction(guitarid));\n      dispatch(fetchCommentsAction(guitarid));\n    }\n  }, [dispatch, params]);\n\n  const mainRef = useRef<HTMLElement | null>(null);\n\n  document.onkeydown = function (evt) {\n    evt = evt || window.event;\n    let isEscape = false;\n    if ('key' in evt) {\n      isEscape = (evt.key === 'Escape' || evt.key === 'Esc');\n    }\n    if (isEscape) {\n      dispatch(setIsCommentModalOpened(false));\n      dispatch(setIsBasket(false));\n      dispatch(setIsSuccessBasket(false));\n      dispatch(setIsSuccessModalOpened(false));\n      startScroll();\n    }\n  };\n\n  if (guitar) {\n    const { name, previewImg, price, rating } = guitar as Guitar;\n    const STARS = Math.ceil(rating);\n    const NULL_STARS = STARS_MAX - STARS;\n\n    return (\n      <React.Fragment>\n        <PageHeader />\n        <main ref={mainRef} className='page-content'>\n          <div className=\"container\">\n            <h1 className=\"page-content__title title title--bigger\">{name}</h1>\n            <ul className=\"breadcrumbs page-content__breadcrumbs\">\n              <li className=\"breadcrumbs__item\"><Link className=\"link\" to={AppRoute.Page1}>Главная</Link>\n              </li>\n              <li className=\"breadcrumbs__item\"><Link className=\"link\" to={AppRoute.Page1}>Каталог</Link>\n              </li>\n              <li className=\"breadcrumbs__item\"><a className=\"link\">{name}</a>\n              </li>\n            </ul>\n            <div className=\"product-container\"><img className=\"product-container__img\" src={`img/content/${previewImg.length && previewImg.slice(0).substring(4)}`} srcSet={`img/content/${previewImg.length && previewImg.slice(0).substring(4, previewImg.length - 4)}@2x.jpg 2x`} width=\"90\" height=\"235\" alt={name} />\n              <div className=\"product-container__info-wrapper\">\n                <h2 className=\"product-container__title title title--big title--uppercase\">{name}</h2>\n                <div className=\"rate product-container__rating\">\n                  {\n                    [...Array(STARS)].map(() => (\n                      <React.Fragment key={Math.random()}>\n                        <svg width=\"14\" height=\"14\" aria-hidden=\"true\">\n                          <use href=\"#icon-full-star\"></use>\n                        </svg>\n                      </React.Fragment>\n                    ))\n                  }\n                  {\n                    [...Array(NULL_STARS)].map(() => (\n                      <React.Fragment key={Math.random()}>\n                        <svg width=\"14\" height=\"14\" aria-hidden=\"true\">\n                          <use href=\"#icon-star\"></use>\n                        </svg>\n                      </React.Fragment>\n                    ))\n                  }\n                  <p className=\"visually-hidden\">Оценка {rating}</p>\n                  <p className=\"rate__count\">{comments && comments[0] ? comments.length : '0'}</p>\n                </div>\n                <GuitarTab tab={tab} guitar={guitar} />\n              </div>\n              <div className=\"product-container__price-wrapper\">\n                <p className=\"product-container__price-info product-container__price-info--title\">Цена:</p>\n                <p className=\"product-container__price-info product-container__price-info--value\">{pasrePrice(price)} ₽</p>\n                <button className=\"button button--red button--big product-container__button\"\n                  onClick={() => {\n                    onBookingBtnClick();\n                    stopScroll();\n                  }}\n                >\n                  Добавить в корзину\n                </button>\n              </div>\n              { document.location.hash.includes('guitars') ? isBasketModalOpened && <BasketAdiing guitar={guitar}/> : ''}\n              { document.location.hash.includes('guitars') ?  isSuccessBasketModal && <SuccessBasket /> : ''}\n            </div>\n            <section className=\"reviews\">\n              <h3 className=\"reviews__title title title--bigger\">Отзывы</h3>\n              <button className=\"button button--red-border button--big reviews__sumbit-button\"\n                onClick={() => {\n                  onCommentBtnClick();\n                  stopScroll();\n                }}\n              >Оставить отзыв\n              </button>\n              {isCommentModalOpened && <AddComments guitar={guitar} />}\n              {isSuccessModalOpened && <SuccessComments />}\n              {comments && Array.from(comments).slice(0, commentCardsCount).map((comment: Comment) => (\n                <Comments someComment={comment} key={comment.id} />))}\n              {comments && comments.length > commentCardsCount ? <ShowMore /> : ''}\n              {comments?.length !== 0 ? <button style={{ zIndex: 10 }} className=\"button button--up button--red-border button--big reviews__up-button\" onClick={onUpBtnClick}>Наверх</button> : ''}\n            </section>\n          </div>\n        </main>\n        <PageFooter />\n      </React.Fragment>\n    );\n  }\n  return <LoadingScreen />;\n}\n\nexport default GuitarPage;\n","/Users/mashkust/react-starter-pack-main/src/components/loading-screen.tsx",[],"/Users/mashkust/react-starter-pack-main/src/components/guitar-tabs/details.tsx",[],"/Users/mashkust/react-starter-pack-main/src/components/guitar-tabs/description.tsx",[],"/Users/mashkust/react-starter-pack-main/src/components/guitar-tab.tsx",[],"/Users/mashkust/react-starter-pack-main/src/components/basket-card.tsx",[],"/Users/mashkust/react-starter-pack-main/src/store/comment-process.ts",[],"/Users/mashkust/react-starter-pack-main/src/components/guitar-tabs/comments.tsx",[],"/Users/mashkust/react-starter-pack-main/src/components/show-more.tsx",[],"/Users/mashkust/react-starter-pack-main/src/components/add-comments.tsx",[],"/Users/mashkust/react-starter-pack-main/src/services/error-handle.ts",[],"/Users/mashkust/react-starter-pack-main/src/components/success-comments.tsx",[],"/Users/mashkust/react-starter-pack-main/src/utils.ts",[],"/Users/mashkust/react-starter-pack-main/src/mock.ts",[],"/Users/mashkust/react-starter-pack-main/src/store/middlewares.ts",[],"/Users/mashkust/react-starter-pack-main/src/components/history-router.tsx",[],"/Users/mashkust/react-starter-pack-main/src/hash-history.ts",[],"/Users/mashkust/react-starter-pack-main/src/components/filter-card.tsx",[],"/Users/mashkust/react-starter-pack-main/src/components/main-page.tsx",["182"],"import React from 'react';\nimport CatalogCard from './catalog-card';\nimport PageHeader from './page-header';\nimport PageFooter from './page-footer';\nimport { AppRoute } from '../const';\nimport { Link } from 'react-router-dom';\nimport { Guitar } from '../types/types';\nimport { useAppSelector } from '../hooks/hooks';\nimport BasketAdiing from './basket-adding';\nimport SuccessBasket from './success-basket';\nimport { useDispatch } from 'react-redux';\nimport { startScroll } from '../utils';\nimport { setIsBasket, setIsSuccessBasket } from '../store/guitar-data';\n\ntype MainProps = {\n  guitars: Guitar[];\n};\n\nfunction MainPage({ guitars }: MainProps): JSX.Element {\n  const isBasketModalOpened = useAppSelector(({ DATA }) => DATA.isBasketModalOpened);\n  const isSuccessBasketModal = useAppSelector(({ DATA }) => DATA.isSuccessBasketModal);\n  const isGuitar = useAppSelector(({ DATA }) => DATA.isGuitar);\n\n  const dispatch = useDispatch();\n\n  document.onkeydown = function (evt) {\n    evt = evt || window.event;\n    let isEscape = false;\n    if ('key' in evt) {\n      isEscape = (evt.key === 'Escape' || evt.key === 'Esc');\n    }\n    if (isEscape) {\n      dispatch(setIsBasket(false));\n      dispatch(setIsSuccessBasket(false));\n      startScroll();\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader />\n      <main className=\"page-content \">\n        { (document.location.hash.includes('page') && isGuitar) ? isBasketModalOpened && <BasketAdiing guitar={isGuitar}/> : ''}\n        { document.location.hash.includes('page') ?  isSuccessBasketModal && <SuccessBasket /> : ''}\n        <div className=\"container\">\n          <h1 className=\"page-content__title title title--bigger\" >Каталог гитар</h1>\n          <ul className=\"breadcrumbs page-content__breadcrumbs\">\n            <li className=\"breadcrumbs__item\"><Link className=\"link\" to={AppRoute.Page1}>Главная</Link>\n            </li>\n            <li className=\"breadcrumbs__item\"><a className=\"link\">Каталог</a>\n            </li>\n          </ul>\n          <CatalogCard guitars={guitars} />\n        </div>\n      </main>\n      <PageFooter />\n    </React.Fragment>\n  );\n}\n\nexport default MainPage;\n","/Users/mashkust/react-starter-pack-main/src/components/basket-page.tsx",["183"],"import React, {useState } from 'react';\nimport PageHeader from './page-header';\nimport PageFooter from './page-footer';\nimport { AppRoute, VALIDATION_COUPON } from '../const';\nimport { Link } from 'react-router-dom';\nimport BasketCard from './basket-card';\nimport { useAppDispatch, useAppSelector } from '../hooks/hooks';\nimport { Guitar } from '../types/types';\nimport { postCouponAction, postOrdersAction } from '../store/api-actions';\nimport { setIsBasketRemoval, setIsCoupon, setIsDisconnect, setIsDiscount } from '../store/guitar-data';\nimport BasketRemoval from './basket-removal';\nimport { CouponTypes } from '../types/types';\nimport { startScroll } from '../utils';\n\nfunction BasketPage(): JSX.Element {\n  const boughtGuitars = useAppSelector(({ DATA }) => DATA.boughtGuitars);\n  const isGuitar = useAppSelector(({ DATA }) => DATA.isGuitar);\n  const isBasketRemoval = useAppSelector(({ DATA }) => DATA.isBasketRemoval);\n  const isDiscount = useAppSelector(({ DATA }) => DATA.isDiscount);\n  const isCoupon = useAppSelector(({ DATA }) => DATA.isCoupon);\n  const dispatch = useAppDispatch();\n  const [coupon, setCoupon] = useState<string>('');\n  const [isValidationCoupon, setIsValidationCoupon] = useState<boolean>(false);\n  const discount = isDiscount === null ? 0 : isDiscount;\n\n  document.onkeydown = function (evt) {\n    evt = evt || window.event;\n    let isEscape = false;\n    if ('key' in evt) {\n      isEscape = (evt.key === 'Escape' || evt.key === 'Esc');\n    }\n    if (isEscape) {\n      dispatch(setIsBasketRemoval(false));\n      startScroll();\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader />\n      <main className=\"page-content \">\n        {isGuitar ? isBasketRemoval && <BasketRemoval guitar={isGuitar} /> : ''}\n        <div className=\"container\">\n          <h1 className=\"page-content__title title title--bigger\" >Корзина</h1>\n          <ul className=\"breadcrumbs page-content__breadcrumbs page-content__breadcrumbs--on-cart-page\">\n            <li className=\"breadcrumbs__item\"><Link className=\"link\" to={AppRoute.Page1}>Главная</Link>\n            </li>\n            <li className=\"breadcrumbs__item\"><Link className=\"link\" to={AppRoute.Page1}>Каталог</Link>\n            </li>\n            <li className=\"breadcrumbs__item\"><a className=\"link\">Корзина</a>\n            </li>\n          </ul>\n          <div className=\"cart\">\n            {boughtGuitars.length !== 0 ? boughtGuitars.map((guitar: Guitar) => (\n              <BasketCard {...{ guitar }} key={guitar.id} />)) : 'Корзина пуста'}\n            <div className=\"cart__footer\">\n              <div className=\"cart__coupon coupon\">\n                <h2 className=\"title title--little coupon__title\">Промокод на скидку</h2>\n                <p className=\"coupon__info\">Введите свой промокод, если он у вас есть.</p>\n                <form className=\"coupon__form\" id=\"coupon-form\"\n                  onSubmit={(evt: React.FormEvent<HTMLFormElement>) => {\n                    evt.preventDefault();\n                    if ( VALIDATION_COUPON.includes(coupon.toLowerCase() as CouponTypes)\n                    ) {\n                      dispatch(setIsCoupon(coupon.toLowerCase() as CouponTypes));\n                      dispatch((setIsDisconnect(navigator.onLine)));\n                      dispatch(postCouponAction({\n                        coupon: coupon.toLowerCase() as CouponTypes,\n                      }));\n                    }\n                    else {\n                      dispatch(setIsCoupon(null));\n                      dispatch(setIsDiscount(null));\n                    }\n                  }}\n                >\n                  <div className=\"form-input coupon__input\">\n                    <label className=\"visually-hidden\">Промокод</label>\n                    <input type=\"text\" placeholder=\"Введите промокод\" id=\"coupon\" name=\"coupon\" value={coupon}\n                      onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                        if (evt.currentTarget.value.includes(' ')) {\n                          setCoupon(evt.currentTarget.value.split(' ').join(''));\n                        }\n                        else {\n                          setCoupon(evt.currentTarget.value);\n                        }\n                        setIsValidationCoupon(false);\n                      }}\n                    />\n                    {isValidationCoupon && isCoupon !== null ? <p className=\"form-input__message form-input__message--success\"> Промокод принят</p> : ''}\n                    {isValidationCoupon && isCoupon === null ? <p className=\"form-input__message form-input__message--error\"> Неверный промокод</p> : ''}\n                  </div>\n                  <button className=\"button button--big coupon__button\"\n                    onClick={() => {\n                      if (coupon !== '') {\n                        setIsValidationCoupon(true);\n                      }\n                    }}\n                  >Применить\n                  </button>\n                </form>\n              </div>\n              <div className=\"cart__total-info\">\n                <p className=\"cart__total-item\"><span className=\"cart__total-value-name\">Всего:</span>\n                  <span className=\"cart__total-value\">{boughtGuitars.reduce((sum, elem) => {\n                    if (elem.quantity) { return sum + elem.price * elem.quantity; }\n                    else { return sum + elem.price; }\n                  }, 0)} ₽\n                  </span>\n                </p>\n                <p className=\"cart__total-item\"><span className=\"cart__total-value-name\">Скидка:</span>\n                  <span className= {discount !== 0 ? 'cart__total-value cart__total-value--bonus' : 'cart__total-value '}> { Math.fround(-0.01 * discount * boughtGuitars.reduce((sum, elem) => {\n                    if (elem.quantity) {\n                      return sum + elem.price * elem.quantity ;\n                    }\n                    else { return sum + elem.price; }\n                  }, 0))} ₽\n                  </span>\n                </p>\n                <p className=\"cart__total-item\"><span className=\"cart__total-value-name\">К оплате:</span>\n                  <span className=\"cart__total-value cart__total-value--payment\">{ Math.fround((1- 0.01 * discount) * boughtGuitars.reduce((sum, elem) => {\n                    if (elem.quantity) { return sum + elem.price * elem.quantity ; }\n                    else { return sum + elem.price; }\n                  }, 0))} ₽\n                  </span>\n                </p>\n                <button className=\"button button--red button--big cart__order-button\"\n                  onClick={() => {\n                    dispatch(postOrdersAction({\n                      guitarsIds: boughtGuitars.map((guitar: Guitar) => guitar.id),\n                      coupon: isCoupon,\n                    }));\n                    dispatch((setIsDisconnect(navigator.onLine)));\n                  }}\n                  disabled = {boughtGuitars.length === 0}\n                >Оформить заказ\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n      <PageFooter />\n    </React.Fragment>\n  );\n}\n\nexport default BasketPage;\n","/Users/mashkust/react-starter-pack-main/src/components/basket-adding.tsx",["184"],"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TYPES } from '../const';\nimport { buyGuitar, setIsBasket, setIsSuccessBasket } from '../store/guitar-data';\nimport { Guitar } from '../types/types';\nimport { pasrePrice, startScroll } from '../utils';\nimport Pentoville from 'pentonville';\n\ntype BasketAdiingProps = {\n  guitar: Guitar ,\n}\n\nfunction BasketAdiing({ guitar }: BasketAdiingProps): JSX.Element {\n  const { name, previewImg, price, vendorCode, type, stringCount } = guitar;\n  const dispatch = useDispatch();\n\n  const modalCloseHandler = () => {\n    dispatch(setIsBasket(false));\n    startScroll();\n  };\n\n  useEffect(() => () => modalCloseHandler(), []);\n\n  return (\n    <Pentoville>\n      <div className=\"modal is-active modal-for-ui-kit\">\n        <div className=\"modal__wrapper\">\n          <div className=\"modal__overlay\"\n            onClick={modalCloseHandler}\n          >\n          </div>\n          <div className=\"modal__content\">\n            <h2 className=\"modal__header title title--medium\">Добавить товар в корзину</h2>\n            <div className=\"modal__info\"><img className=\"modal__img\" src={`img/content/${previewImg.length && previewImg.slice(0).substring(4)}`} srcSet={`img/content/${previewImg.length && previewImg.slice(0).substring(4, previewImg.length - 4)}@2x.jpg 2x`} width=\"67\" height=\"137\" alt={name} />\n              <div className=\"modal__info-wrapper\">\n                <h3 className=\"modal__product-name title title--little title--uppercase\">Гитара {name}</h3>\n                <p className=\"modal__product-params modal__product-params--margin-11\">Артикул:{vendorCode}</p>\n                <p className=\"modal__product-params\">{type ? TYPES[type] : ''},{stringCount} струнная</p>\n                <p className=\"modal__price-wrapper\"><span className=\"modal__price\">Цена:</span><span className=\"modal__price\">{pasrePrice(price)} ₽</span></p>\n              </div>\n            </div>\n            <div className=\"modal__button-container\">\n              <button className=\"button button--red button--big modal__button modal__button--add\"\n                onClick={() => {\n                  dispatch(buyGuitar(guitar));\n                  dispatch(setIsBasket(false));\n                  dispatch(setIsSuccessBasket(true));\n                }}\n              >\n                Добавить в корзину\n              </button>\n            </div>\n            <button className=\"modal__close-btn button-cross\" type=\"button\" aria-label=\"Закрыть\"\n              onClick={modalCloseHandler}\n            >\n              <span className=\"button-cross__icon\"></span><span className=\"modal__close-btn-interactive-area\"></span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </Pentoville>\n  );\n}\n\nexport default BasketAdiing;\n\n\n","/Users/mashkust/react-starter-pack-main/src/components/success-basket.tsx",["185"],"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { AppRoute } from '../const';\nimport { setIsSuccessBasket } from '../store/guitar-data';\nimport { startScroll, stopScroll } from '../utils';\nimport Pentoville from 'pentonville';\n\nfunction SuccessBasket(): JSX.Element {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const modalCloseHandler = () => {\n    dispatch(setIsSuccessBasket(false));\n    startScroll();\n  };\n\n  useEffect(() => stopScroll(), []);\n  useEffect(() => () => modalCloseHandler(), []);\n\n  return (\n    <Pentoville>\n      <div className=\"modal is-active modal--success modal-for-ui-kit\">\n        <div className=\"modal__wrapper\">\n          <div className=\"modal__overlay\" data-close-modal\n            onClick={() => {\n              dispatch(setIsSuccessBasket(false));\n              startScroll();\n            }}\n          >\n          </div>\n          <div className=\"modal__content\">\n            <svg className=\"modal__icon\" width=\"26\" height=\"20\" aria-hidden=\"true\">\n              <use xlinkHref=\"#icon-success\"></use>\n            </svg>\n            <p className=\"modal__message\">Товар успешно добавлен в корзину</p>\n            <div className=\"modal__button-container modal__button-container--add\">\n              <button className=\"button button--small modal__button\" onClick={() => {\n                dispatch(setIsSuccessBasket(false));\n                navigate(AppRoute.Basket);\n                startScroll();\n              }}\n              >Перейти в корзину\n              </button>\n              <button className=\"button button--black-border button--small modal__button modal__button--right\" onClick={() => {\n                dispatch(setIsSuccessBasket(false));\n                navigate(AppRoute.Page1);\n                startScroll();\n              }}\n              >Продолжить покупки\n              </button>\n            </div>\n            <button className=\"modal__close-btn button-cross\" type=\"button\" aria-label=\"Закрыть\" onClick={() => {\n              dispatch(setIsSuccessBasket(false));\n              startScroll();\n            }}\n            ><span className=\"button-cross__icon\"></span><span className=\"modal__close-btn-interactive-area\"></span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </Pentoville>\n  );\n}\n\nexport default SuccessBasket;\n","/Users/mashkust/react-starter-pack-main/src/components/basket-removal.tsx",["186"],"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteGuitar, setIsBasketRemoval } from '../store/guitar-data';\nimport { pasrePrice, startScroll, stopScroll } from '../utils';\nimport Pentoville from 'pentonville';\nimport { Guitar } from '../types/types';\nimport { TYPES } from '../const';\n\ntype BasketRemovalProps = {\n  guitar: Guitar ,\n}\n\nfunction BasketRemoval( {guitar}: BasketRemovalProps ): JSX.Element {\n  const { id, name, vendorCode, type, stringCount, price, previewImg } = guitar;\n  const dispatch = useDispatch();\n\n  const modalCloseHandler = () => {\n    dispatch(setIsBasketRemoval(false));\n    startScroll();\n  };\n\n  useEffect(() => stopScroll(), []);\n  useEffect(() => () => modalCloseHandler(), []);\n\n  return (\n    <Pentoville>\n      <div className=\"modal is-active modal--success modal-for-ui-kit\">\n        <div className=\"modal__wrapper\">\n          <div className=\"modal__overlay\" data-close-modal\n            onClick={() => {\n              modalCloseHandler();\n            }}\n          >\n          </div>\n          <div className=\"modal__content\">\n            <h2 className=\"modal__header title title--medium title--red\">Удалить этот товар?</h2>\n            <div className=\"modal__info\"><img className=\"modal__img\" src={`img/content/${previewImg.length && previewImg.slice(0).substring(4)}`} srcSet={`img/content/${previewImg.length && previewImg.slice(0).substring(4, previewImg.length - 4)}@2x.jpg 2x`} width=\"67\" height=\"137\" alt=\"Честер bass\"/>\n              <div className=\"modal__info-wrapper\">\n                <h3 className=\"modal__product-name title title--little title--uppercase\">{name}</h3>\n                <p className=\"modal__product-params modal__product-params--margin-11\">Артикул: {vendorCode}</p>\n                <p className=\"modal__product-params\">{type ? TYPES[type] : ''}, {stringCount} струнная</p>\n                <p className=\"modal__price-wrapper\"><span className=\"modal__price\">Цена:</span><span className=\"modal__price\">{pasrePrice(price)} ₽</span></p>\n              </div>\n            </div>\n            <div className=\"modal__button-container \">\n              <button className=\"button button--small modal__button\" onClick={() => {\n                modalCloseHandler();\n                dispatch(deleteGuitar(id));\n              }}\n              >Удалить товар\n              </button>\n              <button className=\"button button--black-border button--small modal__button modal__button--right\" onClick={() => {\n                modalCloseHandler();\n              }}\n              >Продолжить покупки\n              </button>\n            </div>\n            <button className=\"modal__close-btn button-cross\" type=\"button\" aria-label=\"Закрыть\" onClick={() => {\n              modalCloseHandler();\n            }}\n            ><span className=\"button-cross__icon\"></span><span className=\"modal__close-btn-interactive-area\"></span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </Pentoville>\n  );\n}\n\nexport default BasketRemoval;\n","/Users/mashkust/react-starter-pack-main/src/types/types.ts",[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":71,"column":6,"nodeType":"193","endLine":71,"endColumn":23,"suggestions":"194"},{"ruleId":"191","severity":1,"message":"192","line":30,"column":6,"nodeType":"193","endLine":30,"endColumn":8,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":7,"column":52,"nodeType":"198","endLine":7,"endColumn":85},{"ruleId":"196","severity":1,"message":"197","line":34,"column":50,"nodeType":"198","endLine":34,"endColumn":83},{"ruleId":"191","severity":1,"message":"199","line":44,"column":5,"nodeType":"193","endLine":44,"endColumn":7,"suggestions":"200"},{"ruleId":"196","severity":1,"message":"197","line":95,"column":49,"nodeType":"198","endLine":95,"endColumn":69},{"ruleId":"196","severity":1,"message":"197","line":50,"column":47,"nodeType":"198","endLine":50,"endColumn":67},{"ruleId":"196","severity":1,"message":"197","line":50,"column":47,"nodeType":"198","endLine":50,"endColumn":67},{"ruleId":"191","severity":1,"message":"201","line":22,"column":46,"nodeType":"193","endLine":22,"endColumn":48,"suggestions":"202"},{"ruleId":"191","severity":1,"message":"201","line":19,"column":46,"nodeType":"193","endLine":19,"endColumn":48,"suggestions":"203"},{"ruleId":"191","severity":1,"message":"201","line":23,"column":46,"nodeType":"193","endLine":23,"endColumn":48,"suggestions":"204"},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["207"],["208"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch', 'isSortInc', 'isSorting', 'maxPrice', 'minPrice', 'priceMax', 'priceMin', 'selectedStrings.length', 'selectedTypes.length', 'sortDirection', 'sortType', 'strings', and 'types'. Either include them or remove the dependency array.",["209"],"React Hook useEffect has a missing dependency: 'modalCloseHandler'. Either include it or remove the dependency array.",["210"],["211"],["212"],"no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"219","fix":"221"},{"desc":"219","fix":"222"},"Update the dependencies array to be: [dispatch, filteredGuitars]",{"range":"223","text":"224"},"Update the dependencies array to be: [dispatch]",{"range":"225","text":"226"},"Update the dependencies array to be: [dispatch, isSortInc, isSorting, maxPrice, minPrice, priceMax, priceMin, selectedStrings.length, selectedTypes.length, sortDirection, sortType, strings, types]",{"range":"227","text":"228"},"Update the dependencies array to be: [modalCloseHandler]",{"range":"229","text":"230"},{"range":"231","text":"230"},{"range":"232","text":"230"},[3324,3341],"[dispatch, filteredGuitars]",[888,890],"[dispatch]",[1624,1626],"[dispatch, isSortInc, isSorting, maxPrice, minPrice, priceMax, priceMin, selectedStrings.length, selectedTypes.length, sortDirection, sortType, strings, types]",[696,698],"[modalCloseHandler]",[606,608],[749,751]]